// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class PEXPbAuthEnc;
@class PEXPbAuthEncBuilder;
@class PEXPbDhkeySig;
@class PEXPbDhkeySigBuilder;
@class PEXPbGeneralMsgNotification;
@class PEXPbGeneralMsgNotificationBuilder;
@class PEXPbGetDHKeyResponseBodySCip;
@class PEXPbGetDHKeyResponseBodySCipBuilder;
@class PEXPbHybridEncryption;
@class PEXPbHybridEncryptionBuilder;
@class PEXPbMetaFile;
@class PEXPbMetaFileBuilder;
@class PEXPbMetaFileDetail;
@class PEXPbMetaFileDetailBuilder;
@class PEXPbUploadFileEncryptionInfo;
@class PEXPbUploadFileEncryptionInfoBuilder;
@class PEXPbUploadFileKey;
@class PEXPbUploadFileKeyBuilder;
@class PEXPbUploadFileToMac;
@class PEXPbUploadFileToMacBuilder;
@class PEXPbUploadFileXb;
@class PEXPbUploadFileXbBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PEXPbGeneralMsgNotificationPEXPbNotificationType) {
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeNewFile = 0,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeMissedCall = 1,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeDhKeySyncRequest = 2,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeFullMailbox = 3,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeMessageReadAck = 4,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeCallMeRequest = 5,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeBurnMessage = 6,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeConversationPolicy = 7,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeCertRequest = 8,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeIseeYorCertificate = 9,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypePairingRequest = 10,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeContactList = 11,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeGroupChat = 12,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeGroupCall = 13,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeGroupKey = 14,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeServerRequest = 15,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeGeneralRequest = 16,
  PEXPbGeneralMsgNotificationPEXPbNotificationTypeOther = 63,
};

BOOL PEXPbGeneralMsgNotificationPEXPbNotificationTypeIsValidValue(PEXPbGeneralMsgNotificationPEXPbNotificationType value);


@interface PexpbFiletransferRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PEXPbHybridEncryption : PBExtendableMessage {
@private
  BOOL hasVersion_:1;
  BOOL hasACiphertext_:1;
  BOOL hasIv_:1;
  BOOL hasSCiphertext_:1;
  SInt32 version;
  NSData* aCiphertext;
  NSData* iv;
  NSData* sCiphertext;
}
- (BOOL) hasVersion;
- (BOOL) hasACiphertext;
- (BOOL) hasIv;
- (BOOL) hasSCiphertext;
@property (readonly) SInt32 version;
@property (readonly, strong) NSData* aCiphertext;
@property (readonly, strong) NSData* iv;
@property (readonly, strong) NSData* sCiphertext;

+ (PEXPbHybridEncryption*) defaultInstance;
- (PEXPbHybridEncryption*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbHybridEncryptionBuilder*) builder;
+ (PEXPbHybridEncryptionBuilder*) builder;
+ (PEXPbHybridEncryptionBuilder*) builderWithPrototype:(PEXPbHybridEncryption*) prototype;
- (PEXPbHybridEncryptionBuilder*) toBuilder;

+ (PEXPbHybridEncryption*) parseFromData:(NSData*) data;
+ (PEXPbHybridEncryption*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbHybridEncryption*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbHybridEncryption*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbHybridEncryption*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbHybridEncryption*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbHybridEncryptionBuilder : PBExtendableMessageBuilder {
@private
  PEXPbHybridEncryption* result;
}

- (PEXPbHybridEncryption*) defaultInstance;

- (PEXPbHybridEncryptionBuilder*) clear;
- (PEXPbHybridEncryptionBuilder*) clone;

- (PEXPbHybridEncryption*) build;
- (PEXPbHybridEncryption*) buildPartial;

- (PEXPbHybridEncryptionBuilder*) mergeFrom:(PEXPbHybridEncryption*) other;
- (PEXPbHybridEncryptionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbHybridEncryptionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (SInt32) version;
- (PEXPbHybridEncryptionBuilder*) setVersion:(SInt32) value;
- (PEXPbHybridEncryptionBuilder*) clearVersion;

- (BOOL) hasACiphertext;
- (NSData*) aCiphertext;
- (PEXPbHybridEncryptionBuilder*) setACiphertext:(NSData*) value;
- (PEXPbHybridEncryptionBuilder*) clearACiphertext;

- (BOOL) hasIv;
- (NSData*) iv;
- (PEXPbHybridEncryptionBuilder*) setIv:(NSData*) value;
- (PEXPbHybridEncryptionBuilder*) clearIv;

- (BOOL) hasSCiphertext;
- (NSData*) sCiphertext;
- (PEXPbHybridEncryptionBuilder*) setSCiphertext:(NSData*) value;
- (PEXPbHybridEncryptionBuilder*) clearSCiphertext;
@end

@interface PEXPbGetDHKeyResponseBodySCip : PBGeneratedMessage {
@private
  BOOL hasNonce1_:1;
  BOOL hasGx_:1;
  BOOL hasSig1_:1;
  BOOL hasDhGroupId_:1;
  NSString* nonce1;
  NSData* gx;
  NSData* sig1;
  UInt32 dhGroupId;
}
- (BOOL) hasDhGroupId;
- (BOOL) hasGx;
- (BOOL) hasNonce1;
- (BOOL) hasSig1;
@property (readonly) UInt32 dhGroupId;
@property (readonly, strong) NSData* gx;
@property (readonly, strong) NSString* nonce1;
@property (readonly, strong) NSData* sig1;

+ (PEXPbGetDHKeyResponseBodySCip*) defaultInstance;
- (PEXPbGetDHKeyResponseBodySCip*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) builder;
+ (PEXPbGetDHKeyResponseBodySCipBuilder*) builder;
+ (PEXPbGetDHKeyResponseBodySCipBuilder*) builderWithPrototype:(PEXPbGetDHKeyResponseBodySCip*) prototype;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) toBuilder;

+ (PEXPbGetDHKeyResponseBodySCip*) parseFromData:(NSData*) data;
+ (PEXPbGetDHKeyResponseBodySCip*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbGetDHKeyResponseBodySCip*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbGetDHKeyResponseBodySCip*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbGetDHKeyResponseBodySCip*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbGetDHKeyResponseBodySCip*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbGetDHKeyResponseBodySCipBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbGetDHKeyResponseBodySCip* result;
}

- (PEXPbGetDHKeyResponseBodySCip*) defaultInstance;

- (PEXPbGetDHKeyResponseBodySCipBuilder*) clear;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) clone;

- (PEXPbGetDHKeyResponseBodySCip*) build;
- (PEXPbGetDHKeyResponseBodySCip*) buildPartial;

- (PEXPbGetDHKeyResponseBodySCipBuilder*) mergeFrom:(PEXPbGetDHKeyResponseBodySCip*) other;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDhGroupId;
- (UInt32) dhGroupId;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) setDhGroupId:(UInt32) value;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) clearDhGroupId;

- (BOOL) hasGx;
- (NSData*) gx;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) setGx:(NSData*) value;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) clearGx;

- (BOOL) hasNonce1;
- (NSString*) nonce1;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) setNonce1:(NSString*) value;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) clearNonce1;

- (BOOL) hasSig1;
- (NSData*) sig1;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) setSig1:(NSData*) value;
- (PEXPbGetDHKeyResponseBodySCipBuilder*) clearSig1;
@end

@interface PEXPbDhkeySig : PBGeneratedMessage {
@private
  BOOL hasB_:1;
  BOOL hasBCertHash_:1;
  BOOL hasA_:1;
  BOOL hasACertHash_:1;
  BOOL hasNonce1_:1;
  BOOL hasNonce2_:1;
  BOOL hasGx_:1;
  BOOL hasVersion_:1;
  BOOL hasDhGroupId_:1;
  NSString* b;
  NSString* bCertHash;
  NSString* a;
  NSString* aCertHash;
  NSString* nonce1;
  NSString* nonce2;
  NSData* gx;
  UInt32 version;
  UInt32 dhGroupId;
}
- (BOOL) hasVersion;
- (BOOL) hasB;
- (BOOL) hasBCertHash;
- (BOOL) hasA;
- (BOOL) hasACertHash;
- (BOOL) hasDhGroupId;
- (BOOL) hasGx;
- (BOOL) hasNonce1;
- (BOOL) hasNonce2;
@property (readonly) UInt32 version;
@property (readonly, strong) NSString* b;
@property (readonly, strong) NSString* bCertHash;
@property (readonly, strong) NSString* a;
@property (readonly, strong) NSString* aCertHash;
@property (readonly) UInt32 dhGroupId;
@property (readonly, strong) NSData* gx;
@property (readonly, strong) NSString* nonce1;
@property (readonly, strong) NSString* nonce2;

+ (PEXPbDhkeySig*) defaultInstance;
- (PEXPbDhkeySig*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbDhkeySigBuilder*) builder;
+ (PEXPbDhkeySigBuilder*) builder;
+ (PEXPbDhkeySigBuilder*) builderWithPrototype:(PEXPbDhkeySig*) prototype;
- (PEXPbDhkeySigBuilder*) toBuilder;

+ (PEXPbDhkeySig*) parseFromData:(NSData*) data;
+ (PEXPbDhkeySig*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbDhkeySig*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbDhkeySig*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbDhkeySig*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbDhkeySig*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbDhkeySigBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbDhkeySig* result;
}

- (PEXPbDhkeySig*) defaultInstance;

- (PEXPbDhkeySigBuilder*) clear;
- (PEXPbDhkeySigBuilder*) clone;

- (PEXPbDhkeySig*) build;
- (PEXPbDhkeySig*) buildPartial;

- (PEXPbDhkeySigBuilder*) mergeFrom:(PEXPbDhkeySig*) other;
- (PEXPbDhkeySigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbDhkeySigBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (PEXPbDhkeySigBuilder*) setVersion:(UInt32) value;
- (PEXPbDhkeySigBuilder*) clearVersion;

- (BOOL) hasB;
- (NSString*) b;
- (PEXPbDhkeySigBuilder*) setB:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearB;

- (BOOL) hasBCertHash;
- (NSString*) bCertHash;
- (PEXPbDhkeySigBuilder*) setBCertHash:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearBCertHash;

- (BOOL) hasA;
- (NSString*) a;
- (PEXPbDhkeySigBuilder*) setA:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearA;

- (BOOL) hasACertHash;
- (NSString*) aCertHash;
- (PEXPbDhkeySigBuilder*) setACertHash:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearACertHash;

- (BOOL) hasDhGroupId;
- (UInt32) dhGroupId;
- (PEXPbDhkeySigBuilder*) setDhGroupId:(UInt32) value;
- (PEXPbDhkeySigBuilder*) clearDhGroupId;

- (BOOL) hasGx;
- (NSData*) gx;
- (PEXPbDhkeySigBuilder*) setGx:(NSData*) value;
- (PEXPbDhkeySigBuilder*) clearGx;

- (BOOL) hasNonce1;
- (NSString*) nonce1;
- (PEXPbDhkeySigBuilder*) setNonce1:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearNonce1;

- (BOOL) hasNonce2;
- (NSString*) nonce2;
- (PEXPbDhkeySigBuilder*) setNonce2:(NSString*) value;
- (PEXPbDhkeySigBuilder*) clearNonce2;
@end

@interface PEXPbAuthEnc : PBGeneratedMessage {
@private
  BOOL hasIv_:1;
  BOOL hasSCiphertext_:1;
  BOOL hasMac_:1;
  NSData* iv;
  NSData* sCiphertext;
  NSData* mac;
}
- (BOOL) hasIv;
- (BOOL) hasSCiphertext;
- (BOOL) hasMac;
@property (readonly, strong) NSData* iv;
@property (readonly, strong) NSData* sCiphertext;
@property (readonly, strong) NSData* mac;

+ (PEXPbAuthEnc*) defaultInstance;
- (PEXPbAuthEnc*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbAuthEncBuilder*) builder;
+ (PEXPbAuthEncBuilder*) builder;
+ (PEXPbAuthEncBuilder*) builderWithPrototype:(PEXPbAuthEnc*) prototype;
- (PEXPbAuthEncBuilder*) toBuilder;

+ (PEXPbAuthEnc*) parseFromData:(NSData*) data;
+ (PEXPbAuthEnc*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbAuthEnc*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbAuthEnc*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbAuthEnc*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbAuthEnc*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbAuthEncBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbAuthEnc* result;
}

- (PEXPbAuthEnc*) defaultInstance;

- (PEXPbAuthEncBuilder*) clear;
- (PEXPbAuthEncBuilder*) clone;

- (PEXPbAuthEnc*) build;
- (PEXPbAuthEnc*) buildPartial;

- (PEXPbAuthEncBuilder*) mergeFrom:(PEXPbAuthEnc*) other;
- (PEXPbAuthEncBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbAuthEncBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIv;
- (NSData*) iv;
- (PEXPbAuthEncBuilder*) setIv:(NSData*) value;
- (PEXPbAuthEncBuilder*) clearIv;

- (BOOL) hasSCiphertext;
- (NSData*) sCiphertext;
- (PEXPbAuthEncBuilder*) setSCiphertext:(NSData*) value;
- (PEXPbAuthEncBuilder*) clearSCiphertext;

- (BOOL) hasMac;
- (NSData*) mac;
- (PEXPbAuthEncBuilder*) setMac:(NSData*) value;
- (PEXPbAuthEncBuilder*) clearMac;
@end

@interface PEXPbUploadFileKey : PBGeneratedMessage {
@private
  BOOL hasSaltb_:1;
  BOOL hasGy_:1;
  BOOL hasSCiphertext_:1;
  BOOL hasMac_:1;
  NSData* saltb;
  NSData* gy;
  NSData* sCiphertext;
  NSData* mac;
}
- (BOOL) hasSaltb;
- (BOOL) hasGy;
- (BOOL) hasSCiphertext;
- (BOOL) hasMac;
@property (readonly, strong) NSData* saltb;
@property (readonly, strong) NSData* gy;
@property (readonly, strong) NSData* sCiphertext;
@property (readonly, strong) NSData* mac;

+ (PEXPbUploadFileKey*) defaultInstance;
- (PEXPbUploadFileKey*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbUploadFileKeyBuilder*) builder;
+ (PEXPbUploadFileKeyBuilder*) builder;
+ (PEXPbUploadFileKeyBuilder*) builderWithPrototype:(PEXPbUploadFileKey*) prototype;
- (PEXPbUploadFileKeyBuilder*) toBuilder;

+ (PEXPbUploadFileKey*) parseFromData:(NSData*) data;
+ (PEXPbUploadFileKey*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileKey*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbUploadFileKey*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileKey*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbUploadFileKey*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbUploadFileKeyBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbUploadFileKey* result;
}

- (PEXPbUploadFileKey*) defaultInstance;

- (PEXPbUploadFileKeyBuilder*) clear;
- (PEXPbUploadFileKeyBuilder*) clone;

- (PEXPbUploadFileKey*) build;
- (PEXPbUploadFileKey*) buildPartial;

- (PEXPbUploadFileKeyBuilder*) mergeFrom:(PEXPbUploadFileKey*) other;
- (PEXPbUploadFileKeyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbUploadFileKeyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSaltb;
- (NSData*) saltb;
- (PEXPbUploadFileKeyBuilder*) setSaltb:(NSData*) value;
- (PEXPbUploadFileKeyBuilder*) clearSaltb;

- (BOOL) hasGy;
- (NSData*) gy;
- (PEXPbUploadFileKeyBuilder*) setGy:(NSData*) value;
- (PEXPbUploadFileKeyBuilder*) clearGy;

- (BOOL) hasSCiphertext;
- (NSData*) sCiphertext;
- (PEXPbUploadFileKeyBuilder*) setSCiphertext:(NSData*) value;
- (PEXPbUploadFileKeyBuilder*) clearSCiphertext;

- (BOOL) hasMac;
- (NSData*) mac;
- (PEXPbUploadFileKeyBuilder*) setMac:(NSData*) value;
- (PEXPbUploadFileKeyBuilder*) clearMac;
@end

@interface PEXPbUploadFileToMac : PBGeneratedMessage {
@private
  BOOL hasB_:1;
  BOOL hasBCertHash_:1;
  BOOL hasA_:1;
  BOOL hasACertHash_:1;
  BOOL hasNonce1_:1;
  BOOL hasNonce2_:1;
  BOOL hasGx_:1;
  BOOL hasGy_:1;
  BOOL hasGxy_:1;
  BOOL hasNonceb_:1;
  BOOL hasVersion_:1;
  BOOL hasDhGroupId_:1;
  NSString* b;
  NSString* bCertHash;
  NSString* a;
  NSString* aCertHash;
  NSString* nonce1;
  NSString* nonce2;
  NSData* gx;
  NSData* gy;
  NSData* gxy;
  NSData* nonceb;
  UInt32 version;
  UInt32 dhGroupId;
}
- (BOOL) hasVersion;
- (BOOL) hasB;
- (BOOL) hasBCertHash;
- (BOOL) hasA;
- (BOOL) hasACertHash;
- (BOOL) hasDhGroupId;
- (BOOL) hasGx;
- (BOOL) hasGy;
- (BOOL) hasGxy;
- (BOOL) hasNonce1;
- (BOOL) hasNonce2;
- (BOOL) hasNonceb;
@property (readonly) UInt32 version;
@property (readonly, strong) NSString* b;
@property (readonly, strong) NSString* bCertHash;
@property (readonly, strong) NSString* a;
@property (readonly, strong) NSString* aCertHash;
@property (readonly) UInt32 dhGroupId;
@property (readonly, strong) NSData* gx;
@property (readonly, strong) NSData* gy;
@property (readonly, strong) NSData* gxy;
@property (readonly, strong) NSString* nonce1;
@property (readonly, strong) NSString* nonce2;
@property (readonly, strong) NSData* nonceb;

+ (PEXPbUploadFileToMac*) defaultInstance;
- (PEXPbUploadFileToMac*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbUploadFileToMacBuilder*) builder;
+ (PEXPbUploadFileToMacBuilder*) builder;
+ (PEXPbUploadFileToMacBuilder*) builderWithPrototype:(PEXPbUploadFileToMac*) prototype;
- (PEXPbUploadFileToMacBuilder*) toBuilder;

+ (PEXPbUploadFileToMac*) parseFromData:(NSData*) data;
+ (PEXPbUploadFileToMac*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileToMac*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbUploadFileToMac*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileToMac*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbUploadFileToMac*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbUploadFileToMacBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbUploadFileToMac* result;
}

- (PEXPbUploadFileToMac*) defaultInstance;

- (PEXPbUploadFileToMacBuilder*) clear;
- (PEXPbUploadFileToMacBuilder*) clone;

- (PEXPbUploadFileToMac*) build;
- (PEXPbUploadFileToMac*) buildPartial;

- (PEXPbUploadFileToMacBuilder*) mergeFrom:(PEXPbUploadFileToMac*) other;
- (PEXPbUploadFileToMacBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbUploadFileToMacBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (PEXPbUploadFileToMacBuilder*) setVersion:(UInt32) value;
- (PEXPbUploadFileToMacBuilder*) clearVersion;

- (BOOL) hasB;
- (NSString*) b;
- (PEXPbUploadFileToMacBuilder*) setB:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearB;

- (BOOL) hasBCertHash;
- (NSString*) bCertHash;
- (PEXPbUploadFileToMacBuilder*) setBCertHash:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearBCertHash;

- (BOOL) hasA;
- (NSString*) a;
- (PEXPbUploadFileToMacBuilder*) setA:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearA;

- (BOOL) hasACertHash;
- (NSString*) aCertHash;
- (PEXPbUploadFileToMacBuilder*) setACertHash:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearACertHash;

- (BOOL) hasDhGroupId;
- (UInt32) dhGroupId;
- (PEXPbUploadFileToMacBuilder*) setDhGroupId:(UInt32) value;
- (PEXPbUploadFileToMacBuilder*) clearDhGroupId;

- (BOOL) hasGx;
- (NSData*) gx;
- (PEXPbUploadFileToMacBuilder*) setGx:(NSData*) value;
- (PEXPbUploadFileToMacBuilder*) clearGx;

- (BOOL) hasGy;
- (NSData*) gy;
- (PEXPbUploadFileToMacBuilder*) setGy:(NSData*) value;
- (PEXPbUploadFileToMacBuilder*) clearGy;

- (BOOL) hasGxy;
- (NSData*) gxy;
- (PEXPbUploadFileToMacBuilder*) setGxy:(NSData*) value;
- (PEXPbUploadFileToMacBuilder*) clearGxy;

- (BOOL) hasNonce1;
- (NSString*) nonce1;
- (PEXPbUploadFileToMacBuilder*) setNonce1:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearNonce1;

- (BOOL) hasNonce2;
- (NSString*) nonce2;
- (PEXPbUploadFileToMacBuilder*) setNonce2:(NSString*) value;
- (PEXPbUploadFileToMacBuilder*) clearNonce2;

- (BOOL) hasNonceb;
- (NSData*) nonceb;
- (PEXPbUploadFileToMacBuilder*) setNonceb:(NSData*) value;
- (PEXPbUploadFileToMacBuilder*) clearNonceb;
@end

@interface PEXPbUploadFileXb : PBGeneratedMessage {
@private
  BOOL hasB_:1;
  BOOL hasNonceb_:1;
  BOOL hasSig_:1;
  NSString* b;
  NSData* nonceb;
  NSData* sig;
}
- (BOOL) hasB;
- (BOOL) hasNonceb;
- (BOOL) hasSig;
@property (readonly, strong) NSString* b;
@property (readonly, strong) NSData* nonceb;
@property (readonly, strong) NSData* sig;

+ (PEXPbUploadFileXb*) defaultInstance;
- (PEXPbUploadFileXb*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbUploadFileXbBuilder*) builder;
+ (PEXPbUploadFileXbBuilder*) builder;
+ (PEXPbUploadFileXbBuilder*) builderWithPrototype:(PEXPbUploadFileXb*) prototype;
- (PEXPbUploadFileXbBuilder*) toBuilder;

+ (PEXPbUploadFileXb*) parseFromData:(NSData*) data;
+ (PEXPbUploadFileXb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileXb*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbUploadFileXb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileXb*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbUploadFileXb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbUploadFileXbBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbUploadFileXb* result;
}

- (PEXPbUploadFileXb*) defaultInstance;

- (PEXPbUploadFileXbBuilder*) clear;
- (PEXPbUploadFileXbBuilder*) clone;

- (PEXPbUploadFileXb*) build;
- (PEXPbUploadFileXb*) buildPartial;

- (PEXPbUploadFileXbBuilder*) mergeFrom:(PEXPbUploadFileXb*) other;
- (PEXPbUploadFileXbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbUploadFileXbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasB;
- (NSString*) b;
- (PEXPbUploadFileXbBuilder*) setB:(NSString*) value;
- (PEXPbUploadFileXbBuilder*) clearB;

- (BOOL) hasNonceb;
- (NSData*) nonceb;
- (PEXPbUploadFileXbBuilder*) setNonceb:(NSData*) value;
- (PEXPbUploadFileXbBuilder*) clearNonceb;

- (BOOL) hasSig;
- (NSData*) sig;
- (PEXPbUploadFileXbBuilder*) setSig:(NSData*) value;
- (PEXPbUploadFileXbBuilder*) clearSig;
@end

@interface PEXPbUploadFileEncryptionInfo : PBGeneratedMessage {
@private
  BOOL hasIv_:1;
  BOOL hasMac_:1;
  NSData* iv;
  NSData* mac;
}
- (BOOL) hasIv;
- (BOOL) hasMac;
@property (readonly, strong) NSData* iv;
@property (readonly, strong) NSData* mac;

+ (PEXPbUploadFileEncryptionInfo*) defaultInstance;
- (PEXPbUploadFileEncryptionInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbUploadFileEncryptionInfoBuilder*) builder;
+ (PEXPbUploadFileEncryptionInfoBuilder*) builder;
+ (PEXPbUploadFileEncryptionInfoBuilder*) builderWithPrototype:(PEXPbUploadFileEncryptionInfo*) prototype;
- (PEXPbUploadFileEncryptionInfoBuilder*) toBuilder;

+ (PEXPbUploadFileEncryptionInfo*) parseFromData:(NSData*) data;
+ (PEXPbUploadFileEncryptionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileEncryptionInfo*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbUploadFileEncryptionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUploadFileEncryptionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbUploadFileEncryptionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbUploadFileEncryptionInfoBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbUploadFileEncryptionInfo* result;
}

- (PEXPbUploadFileEncryptionInfo*) defaultInstance;

- (PEXPbUploadFileEncryptionInfoBuilder*) clear;
- (PEXPbUploadFileEncryptionInfoBuilder*) clone;

- (PEXPbUploadFileEncryptionInfo*) build;
- (PEXPbUploadFileEncryptionInfo*) buildPartial;

- (PEXPbUploadFileEncryptionInfoBuilder*) mergeFrom:(PEXPbUploadFileEncryptionInfo*) other;
- (PEXPbUploadFileEncryptionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbUploadFileEncryptionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIv;
- (NSData*) iv;
- (PEXPbUploadFileEncryptionInfoBuilder*) setIv:(NSData*) value;
- (PEXPbUploadFileEncryptionInfoBuilder*) clearIv;

- (BOOL) hasMac;
- (NSData*) mac;
- (PEXPbUploadFileEncryptionInfoBuilder*) setMac:(NSData*) value;
- (PEXPbUploadFileEncryptionInfoBuilder*) clearMac;
@end

@interface PEXPbMetaFileDetail : PBGeneratedMessage {
@private
  BOOL hasFileSize_:1;
  BOOL hasFileTimeMilli_:1;
  BOOL hasPrefOrder_:1;
  BOOL hasFileName_:1;
  BOOL hasExtension_:1;
  BOOL hasMimeType_:1;
  BOOL hasThumbNameInZip_:1;
  BOOL hasTitle_:1;
  BOOL hasDesc_:1;
  BOOL hasXhash_:1;
  BOOL hasThumb_:1;
  UInt64 fileSize;
  UInt64 fileTimeMilli;
  SInt32 prefOrder;
  NSString* fileName;
  NSString* extension;
  NSString* mimeType;
  NSString* thumbNameInZip;
  NSString* title;
  NSString* desc;
  NSData* xhash;
  NSData* thumb;
}
- (BOOL) hasFileName;
- (BOOL) hasExtension;
- (BOOL) hasMimeType;
- (BOOL) hasFileSize;
- (BOOL) hasXhash;
- (BOOL) hasThumb;
- (BOOL) hasPrefOrder;
- (BOOL) hasThumbNameInZip;
- (BOOL) hasTitle;
- (BOOL) hasDesc;
- (BOOL) hasFileTimeMilli;
@property (readonly, strong) NSString* fileName;
@property (readonly, strong) NSString* extension;
@property (readonly, strong) NSString* mimeType;
@property (readonly) UInt64 fileSize;
@property (readonly, strong) NSData* xhash;
@property (readonly, strong) NSData* thumb;
@property (readonly) SInt32 prefOrder;
@property (readonly, strong) NSString* thumbNameInZip;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* desc;
@property (readonly) UInt64 fileTimeMilli;

+ (PEXPbMetaFileDetail*) defaultInstance;
- (PEXPbMetaFileDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbMetaFileDetailBuilder*) builder;
+ (PEXPbMetaFileDetailBuilder*) builder;
+ (PEXPbMetaFileDetailBuilder*) builderWithPrototype:(PEXPbMetaFileDetail*) prototype;
- (PEXPbMetaFileDetailBuilder*) toBuilder;

+ (PEXPbMetaFileDetail*) parseFromData:(NSData*) data;
+ (PEXPbMetaFileDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMetaFileDetail*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbMetaFileDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMetaFileDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbMetaFileDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbMetaFileDetailBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbMetaFileDetail* result;
}

- (PEXPbMetaFileDetail*) defaultInstance;

- (PEXPbMetaFileDetailBuilder*) clear;
- (PEXPbMetaFileDetailBuilder*) clone;

- (PEXPbMetaFileDetail*) build;
- (PEXPbMetaFileDetail*) buildPartial;

- (PEXPbMetaFileDetailBuilder*) mergeFrom:(PEXPbMetaFileDetail*) other;
- (PEXPbMetaFileDetailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbMetaFileDetailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileName;
- (NSString*) fileName;
- (PEXPbMetaFileDetailBuilder*) setFileName:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearFileName;

- (BOOL) hasExtension;
- (NSString*) extension;
- (PEXPbMetaFileDetailBuilder*) setExtension:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearExtension;

- (BOOL) hasMimeType;
- (NSString*) mimeType;
- (PEXPbMetaFileDetailBuilder*) setMimeType:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearMimeType;

- (BOOL) hasFileSize;
- (UInt64) fileSize;
- (PEXPbMetaFileDetailBuilder*) setFileSize:(UInt64) value;
- (PEXPbMetaFileDetailBuilder*) clearFileSize;

- (BOOL) hasXhash;
- (NSData*) xhash;
- (PEXPbMetaFileDetailBuilder*) setXhash:(NSData*) value;
- (PEXPbMetaFileDetailBuilder*) clearXhash;

- (BOOL) hasThumb;
- (NSData*) thumb;
- (PEXPbMetaFileDetailBuilder*) setThumb:(NSData*) value;
- (PEXPbMetaFileDetailBuilder*) clearThumb;

- (BOOL) hasPrefOrder;
- (SInt32) prefOrder;
- (PEXPbMetaFileDetailBuilder*) setPrefOrder:(SInt32) value;
- (PEXPbMetaFileDetailBuilder*) clearPrefOrder;

- (BOOL) hasThumbNameInZip;
- (NSString*) thumbNameInZip;
- (PEXPbMetaFileDetailBuilder*) setThumbNameInZip:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearThumbNameInZip;

- (BOOL) hasTitle;
- (NSString*) title;
- (PEXPbMetaFileDetailBuilder*) setTitle:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearTitle;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PEXPbMetaFileDetailBuilder*) setDesc:(NSString*) value;
- (PEXPbMetaFileDetailBuilder*) clearDesc;

- (BOOL) hasFileTimeMilli;
- (UInt64) fileTimeMilli;
- (PEXPbMetaFileDetailBuilder*) setFileTimeMilli:(UInt64) value;
- (PEXPbMetaFileDetailBuilder*) clearFileTimeMilli;
@end

@interface PEXPbMetaFile : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasTitle_:1;
  BOOL hasXdescription_:1;
  BOOL hasArchiveHash_:1;
  BOOL hasArchiveSig_:1;
  BOOL hasNumberOfFiles_:1;
  UInt64 timestamp;
  NSString* title;
  NSString* xdescription;
  NSData* archiveHash;
  NSData* archiveSig;
  UInt32 numberOfFiles;
  NSMutableArray * filesArray;
}
- (BOOL) hasTimestamp;
- (BOOL) hasArchiveHash;
- (BOOL) hasArchiveSig;
- (BOOL) hasNumberOfFiles;
- (BOOL) hasTitle;
- (BOOL) hasXdescription;
@property (readonly) UInt64 timestamp;
@property (readonly, strong) NSData* archiveHash;
@property (readonly, strong) NSData* archiveSig;
@property (readonly) UInt32 numberOfFiles;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* xdescription;
@property (readonly, strong) NSArray * files;
- (PEXPbMetaFileDetail*)filesAtIndex:(NSUInteger)index;

+ (PEXPbMetaFile*) defaultInstance;
- (PEXPbMetaFile*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbMetaFileBuilder*) builder;
+ (PEXPbMetaFileBuilder*) builder;
+ (PEXPbMetaFileBuilder*) builderWithPrototype:(PEXPbMetaFile*) prototype;
- (PEXPbMetaFileBuilder*) toBuilder;

+ (PEXPbMetaFile*) parseFromData:(NSData*) data;
+ (PEXPbMetaFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMetaFile*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbMetaFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMetaFile*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbMetaFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbMetaFileBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbMetaFile* result;
}

- (PEXPbMetaFile*) defaultInstance;

- (PEXPbMetaFileBuilder*) clear;
- (PEXPbMetaFileBuilder*) clone;

- (PEXPbMetaFile*) build;
- (PEXPbMetaFile*) buildPartial;

- (PEXPbMetaFileBuilder*) mergeFrom:(PEXPbMetaFile*) other;
- (PEXPbMetaFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbMetaFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTimestamp;
- (UInt64) timestamp;
- (PEXPbMetaFileBuilder*) setTimestamp:(UInt64) value;
- (PEXPbMetaFileBuilder*) clearTimestamp;

- (BOOL) hasArchiveHash;
- (NSData*) archiveHash;
- (PEXPbMetaFileBuilder*) setArchiveHash:(NSData*) value;
- (PEXPbMetaFileBuilder*) clearArchiveHash;

- (BOOL) hasArchiveSig;
- (NSData*) archiveSig;
- (PEXPbMetaFileBuilder*) setArchiveSig:(NSData*) value;
- (PEXPbMetaFileBuilder*) clearArchiveSig;

- (BOOL) hasNumberOfFiles;
- (UInt32) numberOfFiles;
- (PEXPbMetaFileBuilder*) setNumberOfFiles:(UInt32) value;
- (PEXPbMetaFileBuilder*) clearNumberOfFiles;

- (BOOL) hasTitle;
- (NSString*) title;
- (PEXPbMetaFileBuilder*) setTitle:(NSString*) value;
- (PEXPbMetaFileBuilder*) clearTitle;

- (BOOL) hasXdescription;
- (NSString*) xdescription;
- (PEXPbMetaFileBuilder*) setXdescription:(NSString*) value;
- (PEXPbMetaFileBuilder*) clearXdescription;

- (NSMutableArray *)files;
- (PEXPbMetaFileDetail*)filesAtIndex:(NSUInteger)index;
- (PEXPbMetaFileBuilder *)addFiles:(PEXPbMetaFileDetail*)value;
- (PEXPbMetaFileBuilder *)setFilesArray:(NSArray *)array;
- (PEXPbMetaFileBuilder *)clearFiles;
@end

@interface PEXPbGeneralMsgNotification : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasTitle_:1;
  BOOL hasSubtitle_:1;
  BOOL hasFileTransferNonce_:1;
  BOOL hasSipCallId_:1;
  BOOL hasRequestBodyAux_:1;
  BOOL hasNonce_:1;
  BOOL hasNotifAux_:1;
  BOOL hasNotifCode_:1;
  BOOL hasNotifSubCode_:1;
  BOOL hasNotifType_:1;
  UInt64 timestamp;
  NSString* title;
  NSString* subtitle;
  NSString* fileTransferNonce;
  NSString* sipCallId;
  NSString* requestBodyAux;
  UInt32 nonce;
  UInt32 notifAux;
  UInt32 notifCode;
  UInt32 notifSubCode;
  PEXPbGeneralMsgNotificationPEXPbNotificationType notifType;
  PBAppendableArray * ackNoncesArray;
  SInt32 ackNoncesMemoizedSerializedSize;
  PBAppendableArray * msgNoncesArray;
}
- (BOOL) hasTitle;
- (BOOL) hasSubtitle;
- (BOOL) hasTimestamp;
- (BOOL) hasNonce;
- (BOOL) hasNotifType;
- (BOOL) hasNotifAux;
- (BOOL) hasFileTransferNonce;
- (BOOL) hasSipCallId;
- (BOOL) hasNotifCode;
- (BOOL) hasNotifSubCode;
- (BOOL) hasRequestBodyAux;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* subtitle;
@property (readonly) UInt64 timestamp;
@property (readonly) UInt32 nonce;
@property (readonly) PEXPbGeneralMsgNotificationPEXPbNotificationType notifType;
@property (readonly) UInt32 notifAux;
@property (readonly, strong) NSString* fileTransferNonce;
@property (readonly, strong) PBArray * ackNonces;
@property (readonly, strong) NSString* sipCallId;
@property (readonly, strong) PBArray * msgNonces;
@property (readonly) UInt32 notifCode;
@property (readonly) UInt32 notifSubCode;
@property (readonly, strong) NSString* requestBodyAux;
- (UInt32)ackNoncesAtIndex:(NSUInteger)index;
- (UInt32)msgNoncesAtIndex:(NSUInteger)index;

+ (PEXPbGeneralMsgNotification*) defaultInstance;
- (PEXPbGeneralMsgNotification*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbGeneralMsgNotificationBuilder*) builder;
+ (PEXPbGeneralMsgNotificationBuilder*) builder;
+ (PEXPbGeneralMsgNotificationBuilder*) builderWithPrototype:(PEXPbGeneralMsgNotification*) prototype;
- (PEXPbGeneralMsgNotificationBuilder*) toBuilder;

+ (PEXPbGeneralMsgNotification*) parseFromData:(NSData*) data;
+ (PEXPbGeneralMsgNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbGeneralMsgNotification*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbGeneralMsgNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbGeneralMsgNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbGeneralMsgNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbGeneralMsgNotificationBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbGeneralMsgNotification* result;
}

- (PEXPbGeneralMsgNotification*) defaultInstance;

- (PEXPbGeneralMsgNotificationBuilder*) clear;
- (PEXPbGeneralMsgNotificationBuilder*) clone;

- (PEXPbGeneralMsgNotification*) build;
- (PEXPbGeneralMsgNotification*) buildPartial;

- (PEXPbGeneralMsgNotificationBuilder*) mergeFrom:(PEXPbGeneralMsgNotification*) other;
- (PEXPbGeneralMsgNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbGeneralMsgNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTitle;
- (NSString*) title;
- (PEXPbGeneralMsgNotificationBuilder*) setTitle:(NSString*) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearTitle;

- (BOOL) hasSubtitle;
- (NSString*) subtitle;
- (PEXPbGeneralMsgNotificationBuilder*) setSubtitle:(NSString*) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearSubtitle;

- (BOOL) hasTimestamp;
- (UInt64) timestamp;
- (PEXPbGeneralMsgNotificationBuilder*) setTimestamp:(UInt64) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearTimestamp;

- (BOOL) hasNonce;
- (UInt32) nonce;
- (PEXPbGeneralMsgNotificationBuilder*) setNonce:(UInt32) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearNonce;

- (BOOL) hasNotifType;
- (PEXPbGeneralMsgNotificationPEXPbNotificationType) notifType;
- (PEXPbGeneralMsgNotificationBuilder*) setNotifType:(PEXPbGeneralMsgNotificationPEXPbNotificationType) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearNotifType;

- (BOOL) hasNotifAux;
- (UInt32) notifAux;
- (PEXPbGeneralMsgNotificationBuilder*) setNotifAux:(UInt32) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearNotifAux;

- (BOOL) hasFileTransferNonce;
- (NSString*) fileTransferNonce;
- (PEXPbGeneralMsgNotificationBuilder*) setFileTransferNonce:(NSString*) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearFileTransferNonce;

- (PBAppendableArray *)ackNonces;
- (UInt32)ackNoncesAtIndex:(NSUInteger)index;
- (PEXPbGeneralMsgNotificationBuilder *)addAckNonces:(UInt32)value;
- (PEXPbGeneralMsgNotificationBuilder *)setAckNoncesArray:(NSArray *)array;
- (PEXPbGeneralMsgNotificationBuilder *)setAckNoncesValues:(const UInt32 *)values count:(NSUInteger)count;
- (PEXPbGeneralMsgNotificationBuilder *)clearAckNonces;

- (BOOL) hasSipCallId;
- (NSString*) sipCallId;
- (PEXPbGeneralMsgNotificationBuilder*) setSipCallId:(NSString*) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearSipCallId;

- (PBAppendableArray *)msgNonces;
- (UInt32)msgNoncesAtIndex:(NSUInteger)index;
- (PEXPbGeneralMsgNotificationBuilder *)addMsgNonces:(UInt32)value;
- (PEXPbGeneralMsgNotificationBuilder *)setMsgNoncesArray:(NSArray *)array;
- (PEXPbGeneralMsgNotificationBuilder *)setMsgNoncesValues:(const UInt32 *)values count:(NSUInteger)count;
- (PEXPbGeneralMsgNotificationBuilder *)clearMsgNonces;

- (BOOL) hasNotifCode;
- (UInt32) notifCode;
- (PEXPbGeneralMsgNotificationBuilder*) setNotifCode:(UInt32) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearNotifCode;

- (BOOL) hasNotifSubCode;
- (UInt32) notifSubCode;
- (PEXPbGeneralMsgNotificationBuilder*) setNotifSubCode:(UInt32) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearNotifSubCode;

- (BOOL) hasRequestBodyAux;
- (NSString*) requestBodyAux;
- (PEXPbGeneralMsgNotificationBuilder*) setRequestBodyAux:(NSString*) value;
- (PEXPbGeneralMsgNotificationBuilder*) clearRequestBodyAux;
@end


// @@protoc_insertion_point(global_scope)
