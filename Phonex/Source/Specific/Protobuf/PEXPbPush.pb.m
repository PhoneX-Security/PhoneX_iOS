// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PEXPbPush.pb.h"
// @@protoc_insertion_point(imports)

@implementation PexpbPushRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PexpbPushRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PEXPbPresencePush ()
@property UInt32 version;
@property (strong) NSString* certHashShort;
@property (strong) NSString* certHashFull;
@property UInt64 certNotBefore;
@property PEXPbPresencePushPEXPbStatus status;
@property (strong) NSString* statusText;
@property (strong) NSMutableArray * capabilitiesArray;
@property BOOL capabilitiesSkip;
@property (strong) NSString* capabilitiesHash;
@property BOOL sipRegistered;
@property (strong) NSString* resourceId;
@property (strong) NSString* sipId;
@property (strong) NSString* auxJson;
@property BOOL serverGenerated;
@property UInt64 serverLastActivity;
@property (strong) NSString* serverJsonAux;
@end

@implementation PEXPbPresencePush

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasCertHashShort {
  return !!hasCertHashShort_;
}
- (void) setHasCertHashShort:(BOOL) value_ {
  hasCertHashShort_ = !!value_;
}
@synthesize certHashShort;
- (BOOL) hasCertHashFull {
  return !!hasCertHashFull_;
}
- (void) setHasCertHashFull:(BOOL) value_ {
  hasCertHashFull_ = !!value_;
}
@synthesize certHashFull;
- (BOOL) hasCertNotBefore {
  return !!hasCertNotBefore_;
}
- (void) setHasCertNotBefore:(BOOL) value_ {
  hasCertNotBefore_ = !!value_;
}
@synthesize certNotBefore;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasStatusText {
  return !!hasStatusText_;
}
- (void) setHasStatusText:(BOOL) value_ {
  hasStatusText_ = !!value_;
}
@synthesize statusText;
@synthesize capabilitiesArray;
@dynamic capabilities;
- (BOOL) hasCapabilitiesSkip {
  return !!hasCapabilitiesSkip_;
}
- (void) setHasCapabilitiesSkip:(BOOL) value_ {
  hasCapabilitiesSkip_ = !!value_;
}
- (BOOL) capabilitiesSkip {
  return !!capabilitiesSkip_;
}
- (void) setCapabilitiesSkip:(BOOL) value_ {
  capabilitiesSkip_ = !!value_;
}
- (BOOL) hasCapabilitiesHash {
  return !!hasCapabilitiesHash_;
}
- (void) setHasCapabilitiesHash:(BOOL) value_ {
  hasCapabilitiesHash_ = !!value_;
}
@synthesize capabilitiesHash;
- (BOOL) hasSipRegistered {
  return !!hasSipRegistered_;
}
- (void) setHasSipRegistered:(BOOL) value_ {
  hasSipRegistered_ = !!value_;
}
- (BOOL) sipRegistered {
  return !!sipRegistered_;
}
- (void) setSipRegistered:(BOOL) value_ {
  sipRegistered_ = !!value_;
}
- (BOOL) hasResourceId {
  return !!hasResourceId_;
}
- (void) setHasResourceId:(BOOL) value_ {
  hasResourceId_ = !!value_;
}
@synthesize resourceId;
- (BOOL) hasSipId {
  return !!hasSipId_;
}
- (void) setHasSipId:(BOOL) value_ {
  hasSipId_ = !!value_;
}
@synthesize sipId;
- (BOOL) hasAuxJson {
  return !!hasAuxJson_;
}
- (void) setHasAuxJson:(BOOL) value_ {
  hasAuxJson_ = !!value_;
}
@synthesize auxJson;
- (BOOL) hasServerGenerated {
  return !!hasServerGenerated_;
}
- (void) setHasServerGenerated:(BOOL) value_ {
  hasServerGenerated_ = !!value_;
}
- (BOOL) serverGenerated {
  return !!serverGenerated_;
}
- (void) setServerGenerated:(BOOL) value_ {
  serverGenerated_ = !!value_;
}
- (BOOL) hasServerLastActivity {
  return !!hasServerLastActivity_;
}
- (void) setHasServerLastActivity:(BOOL) value_ {
  hasServerLastActivity_ = !!value_;
}
@synthesize serverLastActivity;
- (BOOL) hasServerJsonAux {
  return !!hasServerJsonAux_;
}
- (void) setHasServerJsonAux:(BOOL) value_ {
  hasServerJsonAux_ = !!value_;
}
@synthesize serverJsonAux;
- (id) init {
  if ((self = [super init])) {
    self.version = 1;
    self.certHashShort = @"";
    self.certHashFull = @"";
    self.certNotBefore = 0L;
    self.status = PEXPbPresencePushPEXPbStatusOnline;
    self.statusText = @"";
    self.capabilitiesSkip = NO;
    self.capabilitiesHash = @"";
    self.sipRegistered = NO;
    self.resourceId = @"";
    self.sipId = @"";
    self.auxJson = @"";
    self.serverGenerated = NO;
    self.serverLastActivity = 0L;
    self.serverJsonAux = @"";
  }
  return self;
}
static PEXPbPresencePush* defaultPEXPbPresencePushInstance = nil;
+ (void) initialize {
  if (self == [PEXPbPresencePush class]) {
    defaultPEXPbPresencePushInstance = [[PEXPbPresencePush alloc] init];
  }
}
+ (PEXPbPresencePush*) defaultInstance {
  return defaultPEXPbPresencePushInstance;
}
- (PEXPbPresencePush*) defaultInstance {
  return defaultPEXPbPresencePushInstance;
}
- (NSArray *)capabilities {
  return capabilitiesArray;
}
- (NSString*)capabilitiesAtIndex:(NSUInteger)index {
  return [capabilitiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeUInt32:1 value:self.version];
  }
  if (self.hasCertHashShort) {
    [output writeString:2 value:self.certHashShort];
  }
  if (self.hasCertHashFull) {
    [output writeString:3 value:self.certHashFull];
  }
  if (self.hasCertNotBefore) {
    [output writeUInt64:4 value:self.certNotBefore];
  }
  if (self.hasStatus) {
    [output writeEnum:5 value:self.status];
  }
  if (self.hasStatusText) {
    [output writeString:6 value:self.statusText];
  }
  [self.capabilitiesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:7 value:element];
  }];
  if (self.hasCapabilitiesSkip) {
    [output writeBool:8 value:self.capabilitiesSkip];
  }
  if (self.hasCapabilitiesHash) {
    [output writeString:9 value:self.capabilitiesHash];
  }
  if (self.hasSipRegistered) {
    [output writeBool:10 value:self.sipRegistered];
  }
  if (self.hasResourceId) {
    [output writeString:11 value:self.resourceId];
  }
  if (self.hasSipId) {
    [output writeString:12 value:self.sipId];
  }
  if (self.hasAuxJson) {
    [output writeString:13 value:self.auxJson];
  }
  if (self.hasServerGenerated) {
    [output writeBool:14 value:self.serverGenerated];
  }
  if (self.hasServerLastActivity) {
    [output writeUInt64:15 value:self.serverLastActivity];
  }
  if (self.hasServerJsonAux) {
    [output writeString:16 value:self.serverJsonAux];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:500
                                        to:1000];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersion) {
    size_ += computeUInt32Size(1, self.version);
  }
  if (self.hasCertHashShort) {
    size_ += computeStringSize(2, self.certHashShort);
  }
  if (self.hasCertHashFull) {
    size_ += computeStringSize(3, self.certHashFull);
  }
  if (self.hasCertNotBefore) {
    size_ += computeUInt64Size(4, self.certNotBefore);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(5, self.status);
  }
  if (self.hasStatusText) {
    size_ += computeStringSize(6, self.statusText);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.capabilitiesArray.count;
    [self.capabilitiesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasCapabilitiesSkip) {
    size_ += computeBoolSize(8, self.capabilitiesSkip);
  }
  if (self.hasCapabilitiesHash) {
    size_ += computeStringSize(9, self.capabilitiesHash);
  }
  if (self.hasSipRegistered) {
    size_ += computeBoolSize(10, self.sipRegistered);
  }
  if (self.hasResourceId) {
    size_ += computeStringSize(11, self.resourceId);
  }
  if (self.hasSipId) {
    size_ += computeStringSize(12, self.sipId);
  }
  if (self.hasAuxJson) {
    size_ += computeStringSize(13, self.auxJson);
  }
  if (self.hasServerGenerated) {
    size_ += computeBoolSize(14, self.serverGenerated);
  }
  if (self.hasServerLastActivity) {
    size_ += computeUInt64Size(15, self.serverLastActivity);
  }
  if (self.hasServerJsonAux) {
    size_ += computeStringSize(16, self.serverJsonAux);
  }
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PEXPbPresencePush*) parseFromData:(NSData*) data {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromData:data] build];
}
+ (PEXPbPresencePush*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PEXPbPresencePush*) parseFromInputStream:(NSInputStream*) input {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromInputStream:input] build];
}
+ (PEXPbPresencePush*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbPresencePush*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromCodedInputStream:input] build];
}
+ (PEXPbPresencePush*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbPresencePush*)[[[PEXPbPresencePush builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbPresencePushBuilder*) builder {
  return [[PEXPbPresencePushBuilder alloc] init];
}
+ (PEXPbPresencePushBuilder*) builderWithPrototype:(PEXPbPresencePush*) prototype {
  return [[PEXPbPresencePush builder] mergeFrom:prototype];
}
- (PEXPbPresencePushBuilder*) builder {
  return [PEXPbPresencePush builder];
}
- (PEXPbPresencePushBuilder*) toBuilder {
  return [PEXPbPresencePush builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  if (self.hasCertHashShort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"certHashShort", self.certHashShort];
  }
  if (self.hasCertHashFull) {
    [output appendFormat:@"%@%@: %@\n", indent, @"certHashFull", self.certHashFull];
  }
  if (self.hasCertNotBefore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"certNotBefore", [NSNumber numberWithLongLong:self.certNotBefore]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasStatusText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statusText", self.statusText];
  }
  [self.capabilitiesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capabilities", obj];
  }];
  if (self.hasCapabilitiesSkip) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capabilitiesSkip", [NSNumber numberWithBool:self.capabilitiesSkip]];
  }
  if (self.hasCapabilitiesHash) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capabilitiesHash", self.capabilitiesHash];
  }
  if (self.hasSipRegistered) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sipRegistered", [NSNumber numberWithBool:self.sipRegistered]];
  }
  if (self.hasResourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceId", self.resourceId];
  }
  if (self.hasSipId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sipId", self.sipId];
  }
  if (self.hasAuxJson) {
    [output appendFormat:@"%@%@: %@\n", indent, @"auxJson", self.auxJson];
  }
  if (self.hasServerGenerated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverGenerated", [NSNumber numberWithBool:self.serverGenerated]];
  }
  if (self.hasServerLastActivity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverLastActivity", [NSNumber numberWithLongLong:self.serverLastActivity]];
  }
  if (self.hasServerJsonAux) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverJsonAux", self.serverJsonAux];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:500
                                              to:1000
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PEXPbPresencePush class]]) {
    return NO;
  }
  PEXPbPresencePush *otherMessage = other;
  return
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasCertHashShort == otherMessage.hasCertHashShort &&
      (!self.hasCertHashShort || [self.certHashShort isEqual:otherMessage.certHashShort]) &&
      self.hasCertHashFull == otherMessage.hasCertHashFull &&
      (!self.hasCertHashFull || [self.certHashFull isEqual:otherMessage.certHashFull]) &&
      self.hasCertNotBefore == otherMessage.hasCertNotBefore &&
      (!self.hasCertNotBefore || self.certNotBefore == otherMessage.certNotBefore) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasStatusText == otherMessage.hasStatusText &&
      (!self.hasStatusText || [self.statusText isEqual:otherMessage.statusText]) &&
      [self.capabilitiesArray isEqualToArray:otherMessage.capabilitiesArray] &&
      self.hasCapabilitiesSkip == otherMessage.hasCapabilitiesSkip &&
      (!self.hasCapabilitiesSkip || self.capabilitiesSkip == otherMessage.capabilitiesSkip) &&
      self.hasCapabilitiesHash == otherMessage.hasCapabilitiesHash &&
      (!self.hasCapabilitiesHash || [self.capabilitiesHash isEqual:otherMessage.capabilitiesHash]) &&
      self.hasSipRegistered == otherMessage.hasSipRegistered &&
      (!self.hasSipRegistered || self.sipRegistered == otherMessage.sipRegistered) &&
      self.hasResourceId == otherMessage.hasResourceId &&
      (!self.hasResourceId || [self.resourceId isEqual:otherMessage.resourceId]) &&
      self.hasSipId == otherMessage.hasSipId &&
      (!self.hasSipId || [self.sipId isEqual:otherMessage.sipId]) &&
      self.hasAuxJson == otherMessage.hasAuxJson &&
      (!self.hasAuxJson || [self.auxJson isEqual:otherMessage.auxJson]) &&
      self.hasServerGenerated == otherMessage.hasServerGenerated &&
      (!self.hasServerGenerated || self.serverGenerated == otherMessage.serverGenerated) &&
      self.hasServerLastActivity == otherMessage.hasServerLastActivity &&
      (!self.hasServerLastActivity || self.serverLastActivity == otherMessage.serverLastActivity) &&
      self.hasServerJsonAux == otherMessage.hasServerJsonAux &&
      (!self.hasServerJsonAux || [self.serverJsonAux isEqual:otherMessage.serverJsonAux]) &&
      [self isEqualExtensionsInOther:otherMessage from:500 to:1000] &&

      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  if (self.hasCertHashShort) {
    hashCode = hashCode * 31 + [self.certHashShort hash];
  }
  if (self.hasCertHashFull) {
    hashCode = hashCode * 31 + [self.certHashFull hash];
  }
  if (self.hasCertNotBefore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.certNotBefore] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasStatusText) {
    hashCode = hashCode * 31 + [self.statusText hash];
  }
  [self.capabilitiesArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCapabilitiesSkip) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.capabilitiesSkip] hash];
  }
  if (self.hasCapabilitiesHash) {
    hashCode = hashCode * 31 + [self.capabilitiesHash hash];
  }
  if (self.hasSipRegistered) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.sipRegistered] hash];
  }
  if (self.hasResourceId) {
    hashCode = hashCode * 31 + [self.resourceId hash];
  }
  if (self.hasSipId) {
    hashCode = hashCode * 31 + [self.sipId hash];
  }
  if (self.hasAuxJson) {
    hashCode = hashCode * 31 + [self.auxJson hash];
  }
  if (self.hasServerGenerated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.serverGenerated] hash];
  }
  if (self.hasServerLastActivity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverLastActivity] hash];
  }
  if (self.hasServerJsonAux) {
    hashCode = hashCode * 31 + [self.serverJsonAux hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:500 to:1000];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PEXPbPresencePushPEXPbStatusIsValidValue(PEXPbPresencePushPEXPbStatus value) {
  switch (value) {
    case PEXPbPresencePushPEXPbStatusOnline:
    case PEXPbPresencePushPEXPbStatusOffline:
    case PEXPbPresencePushPEXPbStatusBusy:
    case PEXPbPresencePushPEXPbStatusAway:
    case PEXPbPresencePushPEXPbStatusDnd:
    case PEXPbPresencePushPEXPbStatusCustom:
    case PEXPbPresencePushPEXPbStatusOncall:
    case PEXPbPresencePushPEXPbStatusDevsleep:
      return YES;
    default:
      return NO;
  }
}
@interface PEXPbPresencePushBuilder()
@property (strong) PEXPbPresencePush* result;
@end

@implementation PEXPbPresencePushBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PEXPbPresencePush alloc] init];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (PEXPbPresencePushBuilder*) clear {
  self.result = [[PEXPbPresencePush alloc] init];
  return self;
}
- (PEXPbPresencePushBuilder*) clone {
  return [PEXPbPresencePush builderWithPrototype:result];
}
- (PEXPbPresencePush*) defaultInstance {
  return [PEXPbPresencePush defaultInstance];
}
- (PEXPbPresencePush*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PEXPbPresencePush*) buildPartial {
  PEXPbPresencePush* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PEXPbPresencePushBuilder*) mergeFrom:(PEXPbPresencePush*) other {
  if (other == [PEXPbPresencePush defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasCertHashShort) {
    [self setCertHashShort:other.certHashShort];
  }
  if (other.hasCertHashFull) {
    [self setCertHashFull:other.certHashFull];
  }
  if (other.hasCertNotBefore) {
    [self setCertNotBefore:other.certNotBefore];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasStatusText) {
    [self setStatusText:other.statusText];
  }
  if (other.capabilitiesArray.count > 0) {
    if (result.capabilitiesArray == nil) {
      result.capabilitiesArray = [[NSMutableArray alloc] initWithArray:other.capabilitiesArray];
    } else {
      [result.capabilitiesArray addObjectsFromArray:other.capabilitiesArray];
    }
  }
  if (other.hasCapabilitiesSkip) {
    [self setCapabilitiesSkip:other.capabilitiesSkip];
  }
  if (other.hasCapabilitiesHash) {
    [self setCapabilitiesHash:other.capabilitiesHash];
  }
  if (other.hasSipRegistered) {
    [self setSipRegistered:other.sipRegistered];
  }
  if (other.hasResourceId) {
    [self setResourceId:other.resourceId];
  }
  if (other.hasSipId) {
    [self setSipId:other.sipId];
  }
  if (other.hasAuxJson) {
    [self setAuxJson:other.auxJson];
  }
  if (other.hasServerGenerated) {
    [self setServerGenerated:other.serverGenerated];
  }
  if (other.hasServerLastActivity) {
    [self setServerLastActivity:other.serverLastActivity];
  }
  if (other.hasServerJsonAux) {
    [self setServerJsonAux:other.serverJsonAux];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PEXPbPresencePushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PEXPbPresencePushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 18: {
        [self setCertHashShort:[input readString]];
        break;
      }
      case 26: {
        [self setCertHashFull:[input readString]];
        break;
      }
      case 32: {
        [self setCertNotBefore:[input readUInt64]];
        break;
      }
      case 40: {
        PEXPbPresencePushPEXPbStatus value = (PEXPbPresencePushPEXPbStatus)[input readEnum];
        if (PEXPbPresencePushPEXPbStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 50: {
        [self setStatusText:[input readString]];
        break;
      }
      case 58: {
        [self addCapabilities:[input readString]];
        break;
      }
      case 64: {
        [self setCapabilitiesSkip:[input readBool]];
        break;
      }
      case 74: {
        [self setCapabilitiesHash:[input readString]];
        break;
      }
      case 80: {
        [self setSipRegistered:[input readBool]];
        break;
      }
      case 90: {
        [self setResourceId:[input readString]];
        break;
      }
      case 98: {
        [self setSipId:[input readString]];
        break;
      }
      case 106: {
        [self setAuxJson:[input readString]];
        break;
      }
      case 112: {
        [self setServerGenerated:[input readBool]];
        break;
      }
      case 120: {
        [self setServerLastActivity:[input readUInt64]];
        break;
      }
      case 130: {
        [self setServerJsonAux:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (PEXPbPresencePushBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
- (BOOL) hasCertHashShort {
  return result.hasCertHashShort;
}
- (NSString*) certHashShort {
  return result.certHashShort;
}
- (PEXPbPresencePushBuilder*) setCertHashShort:(NSString*) value {
  result.hasCertHashShort = YES;
  result.certHashShort = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearCertHashShort {
  result.hasCertHashShort = NO;
  result.certHashShort = @"";
  return self;
}
- (BOOL) hasCertHashFull {
  return result.hasCertHashFull;
}
- (NSString*) certHashFull {
  return result.certHashFull;
}
- (PEXPbPresencePushBuilder*) setCertHashFull:(NSString*) value {
  result.hasCertHashFull = YES;
  result.certHashFull = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearCertHashFull {
  result.hasCertHashFull = NO;
  result.certHashFull = @"";
  return self;
}
- (BOOL) hasCertNotBefore {
  return result.hasCertNotBefore;
}
- (UInt64) certNotBefore {
  return result.certNotBefore;
}
- (PEXPbPresencePushBuilder*) setCertNotBefore:(UInt64) value {
  result.hasCertNotBefore = YES;
  result.certNotBefore = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearCertNotBefore {
  result.hasCertNotBefore = NO;
  result.certNotBefore = 0L;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PEXPbPresencePushPEXPbStatus) status {
  return result.status;
}
- (PEXPbPresencePushBuilder*) setStatus:(PEXPbPresencePushPEXPbStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = PEXPbPresencePushPEXPbStatusOnline;
  return self;
}
- (BOOL) hasStatusText {
  return result.hasStatusText;
}
- (NSString*) statusText {
  return result.statusText;
}
- (PEXPbPresencePushBuilder*) setStatusText:(NSString*) value {
  result.hasStatusText = YES;
  result.statusText = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearStatusText {
  result.hasStatusText = NO;
  result.statusText = @"";
  return self;
}
- (NSMutableArray *)capabilities {
  return result.capabilitiesArray;
}
- (NSString*)capabilitiesAtIndex:(NSUInteger)index {
  return [result capabilitiesAtIndex:index];
}
- (PEXPbPresencePushBuilder *)addCapabilities:(NSString*)value {
  if (result.capabilitiesArray == nil) {
    result.capabilitiesArray = [[NSMutableArray alloc]init];
  }
  [result.capabilitiesArray addObject:value];
  return self;
}
- (PEXPbPresencePushBuilder *)setCapabilitiesArray:(NSArray *)array {
  result.capabilitiesArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PEXPbPresencePushBuilder *)clearCapabilities {
  result.capabilitiesArray = nil;
  return self;
}
- (BOOL) hasCapabilitiesSkip {
  return result.hasCapabilitiesSkip;
}
- (BOOL) capabilitiesSkip {
  return result.capabilitiesSkip;
}
- (PEXPbPresencePushBuilder*) setCapabilitiesSkip:(BOOL) value {
  result.hasCapabilitiesSkip = YES;
  result.capabilitiesSkip = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearCapabilitiesSkip {
  result.hasCapabilitiesSkip = NO;
  result.capabilitiesSkip = NO;
  return self;
}
- (BOOL) hasCapabilitiesHash {
  return result.hasCapabilitiesHash;
}
- (NSString*) capabilitiesHash {
  return result.capabilitiesHash;
}
- (PEXPbPresencePushBuilder*) setCapabilitiesHash:(NSString*) value {
  result.hasCapabilitiesHash = YES;
  result.capabilitiesHash = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearCapabilitiesHash {
  result.hasCapabilitiesHash = NO;
  result.capabilitiesHash = @"";
  return self;
}
- (BOOL) hasSipRegistered {
  return result.hasSipRegistered;
}
- (BOOL) sipRegistered {
  return result.sipRegistered;
}
- (PEXPbPresencePushBuilder*) setSipRegistered:(BOOL) value {
  result.hasSipRegistered = YES;
  result.sipRegistered = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearSipRegistered {
  result.hasSipRegistered = NO;
  result.sipRegistered = NO;
  return self;
}
- (BOOL) hasResourceId {
  return result.hasResourceId;
}
- (NSString*) resourceId {
  return result.resourceId;
}
- (PEXPbPresencePushBuilder*) setResourceId:(NSString*) value {
  result.hasResourceId = YES;
  result.resourceId = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearResourceId {
  result.hasResourceId = NO;
  result.resourceId = @"";
  return self;
}
- (BOOL) hasSipId {
  return result.hasSipId;
}
- (NSString*) sipId {
  return result.sipId;
}
- (PEXPbPresencePushBuilder*) setSipId:(NSString*) value {
  result.hasSipId = YES;
  result.sipId = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearSipId {
  result.hasSipId = NO;
  result.sipId = @"";
  return self;
}
- (BOOL) hasAuxJson {
  return result.hasAuxJson;
}
- (NSString*) auxJson {
  return result.auxJson;
}
- (PEXPbPresencePushBuilder*) setAuxJson:(NSString*) value {
  result.hasAuxJson = YES;
  result.auxJson = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearAuxJson {
  result.hasAuxJson = NO;
  result.auxJson = @"";
  return self;
}
- (BOOL) hasServerGenerated {
  return result.hasServerGenerated;
}
- (BOOL) serverGenerated {
  return result.serverGenerated;
}
- (PEXPbPresencePushBuilder*) setServerGenerated:(BOOL) value {
  result.hasServerGenerated = YES;
  result.serverGenerated = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearServerGenerated {
  result.hasServerGenerated = NO;
  result.serverGenerated = NO;
  return self;
}
- (BOOL) hasServerLastActivity {
  return result.hasServerLastActivity;
}
- (UInt64) serverLastActivity {
  return result.serverLastActivity;
}
- (PEXPbPresencePushBuilder*) setServerLastActivity:(UInt64) value {
  result.hasServerLastActivity = YES;
  result.serverLastActivity = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearServerLastActivity {
  result.hasServerLastActivity = NO;
  result.serverLastActivity = 0L;
  return self;
}
- (BOOL) hasServerJsonAux {
  return result.hasServerJsonAux;
}
- (NSString*) serverJsonAux {
  return result.serverJsonAux;
}
- (PEXPbPresencePushBuilder*) setServerJsonAux:(NSString*) value {
  result.hasServerJsonAux = YES;
  result.serverJsonAux = value;
  return self;
}
- (PEXPbPresencePushBuilder*) clearServerJsonAux {
  result.hasServerJsonAux = NO;
  result.serverJsonAux = @"";
  return self;
}
@end

@interface PEXPbFileDetail ()
@property UInt32 version;
@property (strong) NSString* nonce2;
@property (strong) NSString* fromUser;
@property UInt64 uploadedTime;
@end

@implementation PEXPbFileDetail

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasNonce2 {
  return !!hasNonce2_;
}
- (void) setHasNonce2:(BOOL) value_ {
  hasNonce2_ = !!value_;
}
@synthesize nonce2;
- (BOOL) hasFromUser {
  return !!hasFromUser_;
}
- (void) setHasFromUser:(BOOL) value_ {
  hasFromUser_ = !!value_;
}
@synthesize fromUser;
- (BOOL) hasUploadedTime {
  return !!hasUploadedTime_;
}
- (void) setHasUploadedTime:(BOOL) value_ {
  hasUploadedTime_ = !!value_;
}
@synthesize uploadedTime;
- (id) init {
  if ((self = [super init])) {
    self.version = 0;
    self.nonce2 = @"";
    self.fromUser = @"";
    self.uploadedTime = 0L;
  }
  return self;
}
static PEXPbFileDetail* defaultPEXPbFileDetailInstance = nil;
+ (void) initialize {
  if (self == [PEXPbFileDetail class]) {
    defaultPEXPbFileDetailInstance = [[PEXPbFileDetail alloc] init];
  }
}
+ (PEXPbFileDetail*) defaultInstance {
  return defaultPEXPbFileDetailInstance;
}
- (PEXPbFileDetail*) defaultInstance {
  return defaultPEXPbFileDetailInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeUInt32:1 value:self.version];
  }
  if (self.hasNonce2) {
    [output writeString:2 value:self.nonce2];
  }
  if (self.hasFromUser) {
    [output writeString:3 value:self.fromUser];
  }
  if (self.hasUploadedTime) {
    [output writeUInt64:4 value:self.uploadedTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersion) {
    size_ += computeUInt32Size(1, self.version);
  }
  if (self.hasNonce2) {
    size_ += computeStringSize(2, self.nonce2);
  }
  if (self.hasFromUser) {
    size_ += computeStringSize(3, self.fromUser);
  }
  if (self.hasUploadedTime) {
    size_ += computeUInt64Size(4, self.uploadedTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PEXPbFileDetail*) parseFromData:(NSData*) data {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromData:data] build];
}
+ (PEXPbFileDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PEXPbFileDetail*) parseFromInputStream:(NSInputStream*) input {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromInputStream:input] build];
}
+ (PEXPbFileDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbFileDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromCodedInputStream:input] build];
}
+ (PEXPbFileDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbFileDetail*)[[[PEXPbFileDetail builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbFileDetailBuilder*) builder {
  return [[PEXPbFileDetailBuilder alloc] init];
}
+ (PEXPbFileDetailBuilder*) builderWithPrototype:(PEXPbFileDetail*) prototype {
  return [[PEXPbFileDetail builder] mergeFrom:prototype];
}
- (PEXPbFileDetailBuilder*) builder {
  return [PEXPbFileDetail builder];
}
- (PEXPbFileDetailBuilder*) toBuilder {
  return [PEXPbFileDetail builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  if (self.hasNonce2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nonce2", self.nonce2];
  }
  if (self.hasFromUser) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUser", self.fromUser];
  }
  if (self.hasUploadedTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uploadedTime", [NSNumber numberWithLongLong:self.uploadedTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PEXPbFileDetail class]]) {
    return NO;
  }
  PEXPbFileDetail *otherMessage = other;
  return
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasNonce2 == otherMessage.hasNonce2 &&
      (!self.hasNonce2 || [self.nonce2 isEqual:otherMessage.nonce2]) &&
      self.hasFromUser == otherMessage.hasFromUser &&
      (!self.hasFromUser || [self.fromUser isEqual:otherMessage.fromUser]) &&
      self.hasUploadedTime == otherMessage.hasUploadedTime &&
      (!self.hasUploadedTime || self.uploadedTime == otherMessage.uploadedTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  if (self.hasNonce2) {
    hashCode = hashCode * 31 + [self.nonce2 hash];
  }
  if (self.hasFromUser) {
    hashCode = hashCode * 31 + [self.fromUser hash];
  }
  if (self.hasUploadedTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uploadedTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PEXPbFileDetailBuilder()
@property (strong) PEXPbFileDetail* result;
@end

@implementation PEXPbFileDetailBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PEXPbFileDetail alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PEXPbFileDetailBuilder*) clear {
  self.result = [[PEXPbFileDetail alloc] init];
  return self;
}
- (PEXPbFileDetailBuilder*) clone {
  return [PEXPbFileDetail builderWithPrototype:result];
}
- (PEXPbFileDetail*) defaultInstance {
  return [PEXPbFileDetail defaultInstance];
}
- (PEXPbFileDetail*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PEXPbFileDetail*) buildPartial {
  PEXPbFileDetail* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PEXPbFileDetailBuilder*) mergeFrom:(PEXPbFileDetail*) other {
  if (other == [PEXPbFileDetail defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasNonce2) {
    [self setNonce2:other.nonce2];
  }
  if (other.hasFromUser) {
    [self setFromUser:other.fromUser];
  }
  if (other.hasUploadedTime) {
    [self setUploadedTime:other.uploadedTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PEXPbFileDetailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PEXPbFileDetailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 18: {
        [self setNonce2:[input readString]];
        break;
      }
      case 26: {
        [self setFromUser:[input readString]];
        break;
      }
      case 32: {
        [self setUploadedTime:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (PEXPbFileDetailBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PEXPbFileDetailBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasNonce2 {
  return result.hasNonce2;
}
- (NSString*) nonce2 {
  return result.nonce2;
}
- (PEXPbFileDetailBuilder*) setNonce2:(NSString*) value {
  result.hasNonce2 = YES;
  result.nonce2 = value;
  return self;
}
- (PEXPbFileDetailBuilder*) clearNonce2 {
  result.hasNonce2 = NO;
  result.nonce2 = @"";
  return self;
}
- (BOOL) hasFromUser {
  return result.hasFromUser;
}
- (NSString*) fromUser {
  return result.fromUser;
}
- (PEXPbFileDetailBuilder*) setFromUser:(NSString*) value {
  result.hasFromUser = YES;
  result.fromUser = value;
  return self;
}
- (PEXPbFileDetailBuilder*) clearFromUser {
  result.hasFromUser = NO;
  result.fromUser = @"";
  return self;
}
- (BOOL) hasUploadedTime {
  return result.hasUploadedTime;
}
- (UInt64) uploadedTime {
  return result.uploadedTime;
}
- (PEXPbFileDetailBuilder*) setUploadedTime:(UInt64) value {
  result.hasUploadedTime = YES;
  result.uploadedTime = value;
  return self;
}
- (PEXPbFileDetailBuilder*) clearUploadedTime {
  result.hasUploadedTime = NO;
  result.uploadedTime = 0L;
  return self;
}
@end

@interface PEXPbServerNotificationPush ()
@property UInt32 version;
@property (strong) NSMutableArray * filesArray;
@end

@implementation PEXPbServerNotificationPush

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
@synthesize filesArray;
@dynamic files;
- (id) init {
  if ((self = [super init])) {
    self.version = 1;
  }
  return self;
}
static PEXPbServerNotificationPush* defaultPEXPbServerNotificationPushInstance = nil;
+ (void) initialize {
  if (self == [PEXPbServerNotificationPush class]) {
    defaultPEXPbServerNotificationPushInstance = [[PEXPbServerNotificationPush alloc] init];
  }
}
+ (PEXPbServerNotificationPush*) defaultInstance {
  return defaultPEXPbServerNotificationPushInstance;
}
- (PEXPbServerNotificationPush*) defaultInstance {
  return defaultPEXPbServerNotificationPushInstance;
}
- (NSArray *)files {
  return filesArray;
}
- (PEXPbFileDetail*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeUInt32:1 value:self.version];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PEXPbFileDetail *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self writeExtensionsToCodedOutputStream:output
                                      from:500
                                        to:1000];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersion) {
    size_ += computeUInt32Size(1, self.version);
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PEXPbFileDetail *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PEXPbServerNotificationPush*) parseFromData:(NSData*) data {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromData:data] build];
}
+ (PEXPbServerNotificationPush*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PEXPbServerNotificationPush*) parseFromInputStream:(NSInputStream*) input {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromInputStream:input] build];
}
+ (PEXPbServerNotificationPush*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbServerNotificationPush*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromCodedInputStream:input] build];
}
+ (PEXPbServerNotificationPush*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbServerNotificationPush*)[[[PEXPbServerNotificationPush builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbServerNotificationPushBuilder*) builder {
  return [[PEXPbServerNotificationPushBuilder alloc] init];
}
+ (PEXPbServerNotificationPushBuilder*) builderWithPrototype:(PEXPbServerNotificationPush*) prototype {
  return [[PEXPbServerNotificationPush builder] mergeFrom:prototype];
}
- (PEXPbServerNotificationPushBuilder*) builder {
  return [PEXPbServerNotificationPush builder];
}
- (PEXPbServerNotificationPushBuilder*) toBuilder {
  return [PEXPbServerNotificationPush builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PEXPbFileDetail *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"files"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:500
                                              to:1000
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PEXPbServerNotificationPush class]]) {
    return NO;
  }
  PEXPbServerNotificationPush *otherMessage = other;
  return
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self isEqualExtensionsInOther:otherMessage from:500 to:1000] &&

      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PEXPbFileDetail *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self hashExtensionsFrom:500 to:1000];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PEXPbServerNotificationPushBuilder()
@property (strong) PEXPbServerNotificationPush* result;
@end

@implementation PEXPbServerNotificationPushBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PEXPbServerNotificationPush alloc] init];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (PEXPbServerNotificationPushBuilder*) clear {
  self.result = [[PEXPbServerNotificationPush alloc] init];
  return self;
}
- (PEXPbServerNotificationPushBuilder*) clone {
  return [PEXPbServerNotificationPush builderWithPrototype:result];
}
- (PEXPbServerNotificationPush*) defaultInstance {
  return [PEXPbServerNotificationPush defaultInstance];
}
- (PEXPbServerNotificationPush*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PEXPbServerNotificationPush*) buildPartial {
  PEXPbServerNotificationPush* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PEXPbServerNotificationPushBuilder*) mergeFrom:(PEXPbServerNotificationPush*) other {
  if (other == [PEXPbServerNotificationPush defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[NSMutableArray alloc] initWithArray:other.filesArray];
    } else {
      [result.filesArray addObjectsFromArray:other.filesArray];
    }
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PEXPbServerNotificationPushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PEXPbServerNotificationPushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 18: {
        PEXPbFileDetailBuilder* subBuilder = [PEXPbFileDetail builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (PEXPbServerNotificationPushBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PEXPbServerNotificationPushBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
- (NSMutableArray *)files {
  return result.filesArray;
}
- (PEXPbFileDetail*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (PEXPbServerNotificationPushBuilder *)addFiles:(PEXPbFileDetail*)value {
  if (result.filesArray == nil) {
    result.filesArray = [[NSMutableArray alloc]init];
  }
  [result.filesArray addObject:value];
  return self;
}
- (PEXPbServerNotificationPushBuilder *)setFilesArray:(NSArray *)array {
  result.filesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PEXPbServerNotificationPushBuilder *)clearFiles {
  result.filesArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
