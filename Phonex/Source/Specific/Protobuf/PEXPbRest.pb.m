// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PEXPbRest.pb.h"
// @@protoc_insertion_point(imports)

@implementation PexpbRestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PexpbRestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PEXPbRESTUploadPost ()
@property UInt32 version;
@property SInt32 errorCode;
@property (strong) NSString* message;
@property (strong) NSString* nonce2;
@property UInt64 length;
@end

@implementation PEXPbRESTUploadPost

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value_ {
  hasErrorCode_ = !!value_;
}
@synthesize errorCode;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (BOOL) hasNonce2 {
  return !!hasNonce2_;
}
- (void) setHasNonce2:(BOOL) value_ {
  hasNonce2_ = !!value_;
}
@synthesize nonce2;
- (BOOL) hasLength {
  return !!hasLength_;
}
- (void) setHasLength:(BOOL) value_ {
  hasLength_ = !!value_;
}
@synthesize length;
- (id) init {
  if ((self = [super init])) {
    self.version = 1;
    self.errorCode = 0;
    self.message = @"";
    self.nonce2 = @"";
    self.length = 0L;
  }
  return self;
}
static PEXPbRESTUploadPost* defaultPEXPbRESTUploadPostInstance = nil;
+ (void) initialize {
  if (self == [PEXPbRESTUploadPost class]) {
    defaultPEXPbRESTUploadPostInstance = [[PEXPbRESTUploadPost alloc] init];
  }
}
+ (PEXPbRESTUploadPost*) defaultInstance {
  return defaultPEXPbRESTUploadPostInstance;
}
- (PEXPbRESTUploadPost*) defaultInstance {
  return defaultPEXPbRESTUploadPostInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeUInt32:1 value:self.version];
  }
  if (self.hasErrorCode) {
    [output writeInt32:2 value:self.errorCode];
  }
  if (self.hasMessage) {
    [output writeString:3 value:self.message];
  }
  if (self.hasNonce2) {
    [output writeString:4 value:self.nonce2];
  }
  if (self.hasLength) {
    [output writeUInt64:5 value:self.length];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:300
                                        to:1000];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersion) {
    size_ += computeUInt32Size(1, self.version);
  }
  if (self.hasErrorCode) {
    size_ += computeInt32Size(2, self.errorCode);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(3, self.message);
  }
  if (self.hasNonce2) {
    size_ += computeStringSize(4, self.nonce2);
  }
  if (self.hasLength) {
    size_ += computeUInt64Size(5, self.length);
  }
  size_ += [self extensionsSerializedSize];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PEXPbRESTUploadPost*) parseFromData:(NSData*) data {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromData:data] build];
}
+ (PEXPbRESTUploadPost*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PEXPbRESTUploadPost*) parseFromInputStream:(NSInputStream*) input {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromInputStream:input] build];
}
+ (PEXPbRESTUploadPost*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbRESTUploadPost*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromCodedInputStream:input] build];
}
+ (PEXPbRESTUploadPost*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PEXPbRESTUploadPost*)[[[PEXPbRESTUploadPost builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PEXPbRESTUploadPostBuilder*) builder {
  return [[PEXPbRESTUploadPostBuilder alloc] init];
}
+ (PEXPbRESTUploadPostBuilder*) builderWithPrototype:(PEXPbRESTUploadPost*) prototype {
  return [[PEXPbRESTUploadPost builder] mergeFrom:prototype];
}
- (PEXPbRESTUploadPostBuilder*) builder {
  return [PEXPbRESTUploadPost builder];
}
- (PEXPbRESTUploadPostBuilder*) toBuilder {
  return [PEXPbRESTUploadPost builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  if (self.hasErrorCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorCode", [NSNumber numberWithInteger:self.errorCode]];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  if (self.hasNonce2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nonce2", self.nonce2];
  }
  if (self.hasLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"length", [NSNumber numberWithLongLong:self.length]];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:300
                                              to:1000
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PEXPbRESTUploadPost class]]) {
    return NO;
  }
  PEXPbRESTUploadPost *otherMessage = other;
  return
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasErrorCode == otherMessage.hasErrorCode &&
      (!self.hasErrorCode || self.errorCode == otherMessage.errorCode) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      self.hasNonce2 == otherMessage.hasNonce2 &&
      (!self.hasNonce2 || [self.nonce2 isEqual:otherMessage.nonce2]) &&
      self.hasLength == otherMessage.hasLength &&
      (!self.hasLength || self.length == otherMessage.length) &&
      [self isEqualExtensionsInOther:otherMessage from:300 to:1000] &&

      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  if (self.hasErrorCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.errorCode] hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  if (self.hasNonce2) {
    hashCode = hashCode * 31 + [self.nonce2 hash];
  }
  if (self.hasLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.length] hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:300 to:1000];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PEXPbRESTUploadPostBuilder()
@property (strong) PEXPbRESTUploadPost* result;
@end

@implementation PEXPbRESTUploadPostBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PEXPbRESTUploadPost alloc] init];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (PEXPbRESTUploadPostBuilder*) clear {
  self.result = [[PEXPbRESTUploadPost alloc] init];
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clone {
  return [PEXPbRESTUploadPost builderWithPrototype:result];
}
- (PEXPbRESTUploadPost*) defaultInstance {
  return [PEXPbRESTUploadPost defaultInstance];
}
- (PEXPbRESTUploadPost*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PEXPbRESTUploadPost*) buildPartial {
  PEXPbRESTUploadPost* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PEXPbRESTUploadPostBuilder*) mergeFrom:(PEXPbRESTUploadPost*) other {
  if (other == [PEXPbRESTUploadPost defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.hasNonce2) {
    [self setNonce2:other.nonce2];
  }
  if (other.hasLength) {
    [self setLength:other.length];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PEXPbRESTUploadPostBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PEXPbRESTUploadPostBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 16: {
        [self setErrorCode:[input readInt32]];
        break;
      }
      case 26: {
        [self setMessage:[input readString]];
        break;
      }
      case 34: {
        [self setNonce2:[input readString]];
        break;
      }
      case 40: {
        [self setLength:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (UInt32) version {
  return result.version;
}
- (PEXPbRESTUploadPostBuilder*) setVersion:(UInt32) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (SInt32) errorCode {
  return result.errorCode;
}
- (PEXPbRESTUploadPostBuilder*) setErrorCode:(SInt32) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = 0;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (PEXPbRESTUploadPostBuilder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
- (BOOL) hasNonce2 {
  return result.hasNonce2;
}
- (NSString*) nonce2 {
  return result.nonce2;
}
- (PEXPbRESTUploadPostBuilder*) setNonce2:(NSString*) value {
  result.hasNonce2 = YES;
  result.nonce2 = value;
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clearNonce2 {
  result.hasNonce2 = NO;
  result.nonce2 = @"";
  return self;
}
- (BOOL) hasLength {
  return result.hasLength;
}
- (UInt64) length {
  return result.length;
}
- (PEXPbRESTUploadPostBuilder*) setLength:(UInt64) value {
  result.hasLength = YES;
  result.length = value;
  return self;
}
- (PEXPbRESTUploadPostBuilder*) clearLength {
  result.hasLength = NO;
  result.length = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
