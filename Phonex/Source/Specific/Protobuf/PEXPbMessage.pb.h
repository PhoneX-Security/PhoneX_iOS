// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class PEXPbAMPSimple;
@class PEXPbAMPSimpleBuilder;
@class PEXPbMessageProtocolEnvelope;
@class PEXPbMessageProtocolEnvelopeBuilder;
@class PEXPbSTPSimple;
@class PEXPbSTPSimpleBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface PexpbMessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PEXPbMessageProtocolEnvelope : PBGeneratedMessage {
@private
  BOOL hasProtocolType_:1;
  BOOL hasProtocolVersion_:1;
  BOOL hasPayload_:1;
  BOOL hasSequenceNumber_:1;
  SInt32 protocolType;
  SInt32 protocolVersion;
  NSData* payload;
  UInt32 sequenceNumber;
}
- (BOOL) hasProtocolType;
- (BOOL) hasProtocolVersion;
- (BOOL) hasSequenceNumber;
- (BOOL) hasPayload;
@property (readonly) SInt32 protocolType;
@property (readonly) SInt32 protocolVersion;
@property (readonly) UInt32 sequenceNumber;
@property (readonly, strong) NSData* payload;

+ (PEXPbMessageProtocolEnvelope*) defaultInstance;
- (PEXPbMessageProtocolEnvelope*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbMessageProtocolEnvelopeBuilder*) builder;
+ (PEXPbMessageProtocolEnvelopeBuilder*) builder;
+ (PEXPbMessageProtocolEnvelopeBuilder*) builderWithPrototype:(PEXPbMessageProtocolEnvelope*) prototype;
- (PEXPbMessageProtocolEnvelopeBuilder*) toBuilder;

+ (PEXPbMessageProtocolEnvelope*) parseFromData:(NSData*) data;
+ (PEXPbMessageProtocolEnvelope*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMessageProtocolEnvelope*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbMessageProtocolEnvelope*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMessageProtocolEnvelope*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbMessageProtocolEnvelope*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbMessageProtocolEnvelopeBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbMessageProtocolEnvelope* result;
}

- (PEXPbMessageProtocolEnvelope*) defaultInstance;

- (PEXPbMessageProtocolEnvelopeBuilder*) clear;
- (PEXPbMessageProtocolEnvelopeBuilder*) clone;

- (PEXPbMessageProtocolEnvelope*) build;
- (PEXPbMessageProtocolEnvelope*) buildPartial;

- (PEXPbMessageProtocolEnvelopeBuilder*) mergeFrom:(PEXPbMessageProtocolEnvelope*) other;
- (PEXPbMessageProtocolEnvelopeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbMessageProtocolEnvelopeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProtocolType;
- (SInt32) protocolType;
- (PEXPbMessageProtocolEnvelopeBuilder*) setProtocolType:(SInt32) value;
- (PEXPbMessageProtocolEnvelopeBuilder*) clearProtocolType;

- (BOOL) hasProtocolVersion;
- (SInt32) protocolVersion;
- (PEXPbMessageProtocolEnvelopeBuilder*) setProtocolVersion:(SInt32) value;
- (PEXPbMessageProtocolEnvelopeBuilder*) clearProtocolVersion;

- (BOOL) hasSequenceNumber;
- (UInt32) sequenceNumber;
- (PEXPbMessageProtocolEnvelopeBuilder*) setSequenceNumber:(UInt32) value;
- (PEXPbMessageProtocolEnvelopeBuilder*) clearSequenceNumber;

- (BOOL) hasPayload;
- (NSData*) payload;
- (PEXPbMessageProtocolEnvelopeBuilder*) setPayload:(NSData*) value;
- (PEXPbMessageProtocolEnvelopeBuilder*) clearPayload;
@end

@interface PEXPbSTPSimple : PBGeneratedMessage {
@private
  BOOL hasMessageSentMiliUtc_:1;
  BOOL hasAmpType_:1;
  BOOL hasAmpVersion_:1;
  BOOL hasDestinationType_:1;
  BOOL hasSignatureVersion_:1;
  BOOL hasEAsymBlockVersion_:1;
  BOOL hasESymBlockVersion_:1;
  BOOL hasHmacVersion_:1;
  BOOL hasProtocolType_:1;
  BOOL hasProtocolVersion_:1;
  BOOL hasSender_:1;
  BOOL hasDestination_:1;
  BOOL hasCertificateVersion_:1;
  BOOL hasSignature_:1;
  BOOL hasIv_:1;
  BOOL hasEAsymBlock_:1;
  BOOL hasESymBlock_:1;
  BOOL hasHmac_:1;
  BOOL hasEncKey_:1;
  BOOL hasMacKey_:1;
  BOOL hasPayload_:1;
  BOOL hasSequenceNumber_:1;
  BOOL hasRandomNonce_:1;
  UInt64 messageSentMiliUtc;
  SInt32 ampType;
  SInt32 ampVersion;
  SInt32 destinationType;
  SInt32 signatureVersion;
  SInt32 eAsymBlockVersion;
  SInt32 eSymBlockVersion;
  SInt32 hmacVersion;
  SInt32 protocolType;
  SInt32 protocolVersion;
  NSString* sender;
  NSString* destination;
  NSString* certificateVersion;
  NSData* signature;
  NSData* iv;
  NSData* eAsymBlock;
  NSData* eSymBlock;
  NSData* hmac;
  NSData* encKey;
  NSData* macKey;
  NSData* payload;
  UInt32 sequenceNumber;
  UInt32 randomNonce;
}
- (BOOL) hasAmpType;
- (BOOL) hasAmpVersion;
- (BOOL) hasSequenceNumber;
- (BOOL) hasMessageSentMiliUtc;
- (BOOL) hasRandomNonce;
- (BOOL) hasSender;
- (BOOL) hasDestination;
- (BOOL) hasDestinationType;
- (BOOL) hasSignature;
- (BOOL) hasSignatureVersion;
- (BOOL) hasCertificateVersion;
- (BOOL) hasIv;
- (BOOL) hasEAsymBlock;
- (BOOL) hasEAsymBlockVersion;
- (BOOL) hasESymBlock;
- (BOOL) hasESymBlockVersion;
- (BOOL) hasHmac;
- (BOOL) hasHmacVersion;
- (BOOL) hasEncKey;
- (BOOL) hasMacKey;
- (BOOL) hasPayload;
- (BOOL) hasProtocolType;
- (BOOL) hasProtocolVersion;
@property (readonly) SInt32 ampType;
@property (readonly) SInt32 ampVersion;
@property (readonly) UInt32 sequenceNumber;
@property (readonly) UInt64 messageSentMiliUtc;
@property (readonly) UInt32 randomNonce;
@property (readonly, strong) NSString* sender;
@property (readonly, strong) NSString* destination;
@property (readonly) SInt32 destinationType;
@property (readonly, strong) NSData* signature;
@property (readonly) SInt32 signatureVersion;
@property (readonly, strong) NSString* certificateVersion;
@property (readonly, strong) NSData* iv;
@property (readonly, strong) NSData* eAsymBlock;
@property (readonly) SInt32 eAsymBlockVersion;
@property (readonly, strong) NSData* eSymBlock;
@property (readonly) SInt32 eSymBlockVersion;
@property (readonly, strong) NSData* hmac;
@property (readonly) SInt32 hmacVersion;
@property (readonly, strong) NSData* encKey;
@property (readonly, strong) NSData* macKey;
@property (readonly, strong) NSData* payload;
@property (readonly) SInt32 protocolType;
@property (readonly) SInt32 protocolVersion;

+ (PEXPbSTPSimple*) defaultInstance;
- (PEXPbSTPSimple*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbSTPSimpleBuilder*) builder;
+ (PEXPbSTPSimpleBuilder*) builder;
+ (PEXPbSTPSimpleBuilder*) builderWithPrototype:(PEXPbSTPSimple*) prototype;
- (PEXPbSTPSimpleBuilder*) toBuilder;

+ (PEXPbSTPSimple*) parseFromData:(NSData*) data;
+ (PEXPbSTPSimple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbSTPSimple*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbSTPSimple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbSTPSimple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbSTPSimple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbSTPSimpleBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbSTPSimple* result;
}

- (PEXPbSTPSimple*) defaultInstance;

- (PEXPbSTPSimpleBuilder*) clear;
- (PEXPbSTPSimpleBuilder*) clone;

- (PEXPbSTPSimple*) build;
- (PEXPbSTPSimple*) buildPartial;

- (PEXPbSTPSimpleBuilder*) mergeFrom:(PEXPbSTPSimple*) other;
- (PEXPbSTPSimpleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbSTPSimpleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAmpType;
- (SInt32) ampType;
- (PEXPbSTPSimpleBuilder*) setAmpType:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearAmpType;

- (BOOL) hasAmpVersion;
- (SInt32) ampVersion;
- (PEXPbSTPSimpleBuilder*) setAmpVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearAmpVersion;

- (BOOL) hasSequenceNumber;
- (UInt32) sequenceNumber;
- (PEXPbSTPSimpleBuilder*) setSequenceNumber:(UInt32) value;
- (PEXPbSTPSimpleBuilder*) clearSequenceNumber;

- (BOOL) hasMessageSentMiliUtc;
- (UInt64) messageSentMiliUtc;
- (PEXPbSTPSimpleBuilder*) setMessageSentMiliUtc:(UInt64) value;
- (PEXPbSTPSimpleBuilder*) clearMessageSentMiliUtc;

- (BOOL) hasRandomNonce;
- (UInt32) randomNonce;
- (PEXPbSTPSimpleBuilder*) setRandomNonce:(UInt32) value;
- (PEXPbSTPSimpleBuilder*) clearRandomNonce;

- (BOOL) hasSender;
- (NSString*) sender;
- (PEXPbSTPSimpleBuilder*) setSender:(NSString*) value;
- (PEXPbSTPSimpleBuilder*) clearSender;

- (BOOL) hasDestination;
- (NSString*) destination;
- (PEXPbSTPSimpleBuilder*) setDestination:(NSString*) value;
- (PEXPbSTPSimpleBuilder*) clearDestination;

- (BOOL) hasDestinationType;
- (SInt32) destinationType;
- (PEXPbSTPSimpleBuilder*) setDestinationType:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearDestinationType;

- (BOOL) hasSignature;
- (NSData*) signature;
- (PEXPbSTPSimpleBuilder*) setSignature:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearSignature;

- (BOOL) hasSignatureVersion;
- (SInt32) signatureVersion;
- (PEXPbSTPSimpleBuilder*) setSignatureVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearSignatureVersion;

- (BOOL) hasCertificateVersion;
- (NSString*) certificateVersion;
- (PEXPbSTPSimpleBuilder*) setCertificateVersion:(NSString*) value;
- (PEXPbSTPSimpleBuilder*) clearCertificateVersion;

- (BOOL) hasIv;
- (NSData*) iv;
- (PEXPbSTPSimpleBuilder*) setIv:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearIv;

- (BOOL) hasEAsymBlock;
- (NSData*) eAsymBlock;
- (PEXPbSTPSimpleBuilder*) setEAsymBlock:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearEAsymBlock;

- (BOOL) hasEAsymBlockVersion;
- (SInt32) eAsymBlockVersion;
- (PEXPbSTPSimpleBuilder*) setEAsymBlockVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearEAsymBlockVersion;

- (BOOL) hasESymBlock;
- (NSData*) eSymBlock;
- (PEXPbSTPSimpleBuilder*) setESymBlock:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearESymBlock;

- (BOOL) hasESymBlockVersion;
- (SInt32) eSymBlockVersion;
- (PEXPbSTPSimpleBuilder*) setESymBlockVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearESymBlockVersion;

- (BOOL) hasHmac;
- (NSData*) hmac;
- (PEXPbSTPSimpleBuilder*) setHmac:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearHmac;

- (BOOL) hasHmacVersion;
- (SInt32) hmacVersion;
- (PEXPbSTPSimpleBuilder*) setHmacVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearHmacVersion;

- (BOOL) hasEncKey;
- (NSData*) encKey;
- (PEXPbSTPSimpleBuilder*) setEncKey:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearEncKey;

- (BOOL) hasMacKey;
- (NSData*) macKey;
- (PEXPbSTPSimpleBuilder*) setMacKey:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearMacKey;

- (BOOL) hasPayload;
- (NSData*) payload;
- (PEXPbSTPSimpleBuilder*) setPayload:(NSData*) value;
- (PEXPbSTPSimpleBuilder*) clearPayload;

- (BOOL) hasProtocolType;
- (SInt32) protocolType;
- (PEXPbSTPSimpleBuilder*) setProtocolType:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearProtocolType;

- (BOOL) hasProtocolVersion;
- (SInt32) protocolVersion;
- (PEXPbSTPSimpleBuilder*) setProtocolVersion:(SInt32) value;
- (PEXPbSTPSimpleBuilder*) clearProtocolVersion;
@end

@interface PEXPbAMPSimple : PBGeneratedMessage {
@private
  BOOL hasMessage_:1;
  BOOL hasNonce_:1;
  NSData* message;
  UInt32 nonce;
}
- (BOOL) hasMessage;
- (BOOL) hasNonce;
@property (readonly, strong) NSData* message;
@property (readonly) UInt32 nonce;

+ (PEXPbAMPSimple*) defaultInstance;
- (PEXPbAMPSimple*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbAMPSimpleBuilder*) builder;
+ (PEXPbAMPSimpleBuilder*) builder;
+ (PEXPbAMPSimpleBuilder*) builderWithPrototype:(PEXPbAMPSimple*) prototype;
- (PEXPbAMPSimpleBuilder*) toBuilder;

+ (PEXPbAMPSimple*) parseFromData:(NSData*) data;
+ (PEXPbAMPSimple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbAMPSimple*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbAMPSimple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbAMPSimple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbAMPSimple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbAMPSimpleBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbAMPSimple* result;
}

- (PEXPbAMPSimple*) defaultInstance;

- (PEXPbAMPSimpleBuilder*) clear;
- (PEXPbAMPSimpleBuilder*) clone;

- (PEXPbAMPSimple*) build;
- (PEXPbAMPSimple*) buildPartial;

- (PEXPbAMPSimpleBuilder*) mergeFrom:(PEXPbAMPSimple*) other;
- (PEXPbAMPSimpleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbAMPSimpleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessage;
- (NSData*) message;
- (PEXPbAMPSimpleBuilder*) setMessage:(NSData*) value;
- (PEXPbAMPSimpleBuilder*) clearMessage;

- (BOOL) hasNonce;
- (UInt32) nonce;
- (PEXPbAMPSimpleBuilder*) setNonce:(UInt32) value;
- (PEXPbAMPSimpleBuilder*) clearNonce;
@end


// @@protoc_insertion_point(global_scope)
