// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class PEXPbEncryptedMessage;
@class PEXPbEncryptedMessageBuilder;
@class PEXPbKeySlot;
@class PEXPbKeySlotBuilder;
@class PEXPbMsgKeyPart;
@class PEXPbMsgKeyPartBuilder;
@class PEXPbUserKey;
@class PEXPbUserKeyBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PEXPbMsgKeyPartPEXPbKeyType) {
  PEXPbMsgKeyPartPEXPbKeyTypePubenc = 0,
  PEXPbMsgKeyPartPEXPbKeyTypeDhkey = 1,
};

BOOL PEXPbMsgKeyPartPEXPbKeyTypeIsValidValue(PEXPbMsgKeyPartPEXPbKeyType value);

typedef NS_ENUM(SInt32, PEXPbKeySlotPEXPbKeySlotEncryption) {
  PEXPbKeySlotPEXPbKeySlotEncryptionAes256Cbc = 0,
  PEXPbKeySlotPEXPbKeySlotEncryptionAes256Cbcmac = 1,
  PEXPbKeySlotPEXPbKeySlotEncryptionAes256Gcm = 2,
};

BOOL PEXPbKeySlotPEXPbKeySlotEncryptionIsValidValue(PEXPbKeySlotPEXPbKeySlotEncryption value);


@interface PexpbMessageKeyslotsDraftRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PEXPbUserKey : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasMacKey_:1;
  BOOL hasKeySlotId_:1;
  NSData* key;
  NSData* macKey;
  UInt32 keySlotId;
}
- (BOOL) hasKeySlotId;
- (BOOL) hasKey;
- (BOOL) hasMacKey;
@property (readonly) UInt32 keySlotId;
@property (readonly, strong) NSData* key;
@property (readonly, strong) NSData* macKey;

+ (PEXPbUserKey*) defaultInstance;
- (PEXPbUserKey*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbUserKeyBuilder*) builder;
+ (PEXPbUserKeyBuilder*) builder;
+ (PEXPbUserKeyBuilder*) builderWithPrototype:(PEXPbUserKey*) prototype;
- (PEXPbUserKeyBuilder*) toBuilder;

+ (PEXPbUserKey*) parseFromData:(NSData*) data;
+ (PEXPbUserKey*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUserKey*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbUserKey*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbUserKey*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbUserKey*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbUserKeyBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbUserKey* result;
}

- (PEXPbUserKey*) defaultInstance;

- (PEXPbUserKeyBuilder*) clear;
- (PEXPbUserKeyBuilder*) clone;

- (PEXPbUserKey*) build;
- (PEXPbUserKey*) buildPartial;

- (PEXPbUserKeyBuilder*) mergeFrom:(PEXPbUserKey*) other;
- (PEXPbUserKeyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbUserKeyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKeySlotId;
- (UInt32) keySlotId;
- (PEXPbUserKeyBuilder*) setKeySlotId:(UInt32) value;
- (PEXPbUserKeyBuilder*) clearKeySlotId;

- (BOOL) hasKey;
- (NSData*) key;
- (PEXPbUserKeyBuilder*) setKey:(NSData*) value;
- (PEXPbUserKeyBuilder*) clearKey;

- (BOOL) hasMacKey;
- (NSData*) macKey;
- (PEXPbUserKeyBuilder*) setMacKey:(NSData*) value;
- (PEXPbUserKeyBuilder*) clearMacKey;
@end

@interface PEXPbMsgKeyPart : PBGeneratedMessage {
@private
  BOOL hasDestUser_:1;
  BOOL hasACiphertext_:1;
  BOOL hasSIv_:1;
  BOOL hasSCiphertext_:1;
  BOOL hasMac_:1;
  BOOL hasVersion_:1;
  BOOL hasType_:1;
  NSString* destUser;
  NSData* aCiphertext;
  NSData* sIv;
  NSData* sCiphertext;
  NSData* mac;
  UInt32 version;
  PEXPbMsgKeyPartPEXPbKeyType type;
}
- (BOOL) hasVersion;
- (BOOL) hasType;
- (BOOL) hasDestUser;
- (BOOL) hasACiphertext;
- (BOOL) hasSIv;
- (BOOL) hasSCiphertext;
- (BOOL) hasMac;
@property (readonly) UInt32 version;
@property (readonly) PEXPbMsgKeyPartPEXPbKeyType type;
@property (readonly, strong) NSString* destUser;
@property (readonly, strong) NSData* aCiphertext;
@property (readonly, strong) NSData* sIv;
@property (readonly, strong) NSData* sCiphertext;
@property (readonly, strong) NSData* mac;

+ (PEXPbMsgKeyPart*) defaultInstance;
- (PEXPbMsgKeyPart*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbMsgKeyPartBuilder*) builder;
+ (PEXPbMsgKeyPartBuilder*) builder;
+ (PEXPbMsgKeyPartBuilder*) builderWithPrototype:(PEXPbMsgKeyPart*) prototype;
- (PEXPbMsgKeyPartBuilder*) toBuilder;

+ (PEXPbMsgKeyPart*) parseFromData:(NSData*) data;
+ (PEXPbMsgKeyPart*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMsgKeyPart*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbMsgKeyPart*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbMsgKeyPart*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbMsgKeyPart*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbMsgKeyPartBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbMsgKeyPart* result;
}

- (PEXPbMsgKeyPart*) defaultInstance;

- (PEXPbMsgKeyPartBuilder*) clear;
- (PEXPbMsgKeyPartBuilder*) clone;

- (PEXPbMsgKeyPart*) build;
- (PEXPbMsgKeyPart*) buildPartial;

- (PEXPbMsgKeyPartBuilder*) mergeFrom:(PEXPbMsgKeyPart*) other;
- (PEXPbMsgKeyPartBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbMsgKeyPartBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (PEXPbMsgKeyPartBuilder*) setVersion:(UInt32) value;
- (PEXPbMsgKeyPartBuilder*) clearVersion;

- (BOOL) hasType;
- (PEXPbMsgKeyPartPEXPbKeyType) type;
- (PEXPbMsgKeyPartBuilder*) setType:(PEXPbMsgKeyPartPEXPbKeyType) value;
- (PEXPbMsgKeyPartBuilder*) clearType;

- (BOOL) hasDestUser;
- (NSString*) destUser;
- (PEXPbMsgKeyPartBuilder*) setDestUser:(NSString*) value;
- (PEXPbMsgKeyPartBuilder*) clearDestUser;

- (BOOL) hasACiphertext;
- (NSData*) aCiphertext;
- (PEXPbMsgKeyPartBuilder*) setACiphertext:(NSData*) value;
- (PEXPbMsgKeyPartBuilder*) clearACiphertext;

- (BOOL) hasSIv;
- (NSData*) sIv;
- (PEXPbMsgKeyPartBuilder*) setSIv:(NSData*) value;
- (PEXPbMsgKeyPartBuilder*) clearSIv;

- (BOOL) hasSCiphertext;
- (NSData*) sCiphertext;
- (PEXPbMsgKeyPartBuilder*) setSCiphertext:(NSData*) value;
- (PEXPbMsgKeyPartBuilder*) clearSCiphertext;

- (BOOL) hasMac;
- (NSData*) mac;
- (PEXPbMsgKeyPartBuilder*) setMac:(NSData*) value;
- (PEXPbMsgKeyPartBuilder*) clearMac;
@end

@interface PEXPbKeySlot : PBGeneratedMessage {
@private
  BOOL hasIv_:1;
  BOOL hasEncKey_:1;
  BOOL hasMac_:1;
  BOOL hasEncType_:1;
  NSData* iv;
  NSData* encKey;
  NSData* mac;
  PEXPbKeySlotPEXPbKeySlotEncryption encType;
}
- (BOOL) hasEncType;
- (BOOL) hasIv;
- (BOOL) hasEncKey;
- (BOOL) hasMac;
@property (readonly) PEXPbKeySlotPEXPbKeySlotEncryption encType;
@property (readonly, strong) NSData* iv;
@property (readonly, strong) NSData* encKey;
@property (readonly, strong) NSData* mac;

+ (PEXPbKeySlot*) defaultInstance;
- (PEXPbKeySlot*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbKeySlotBuilder*) builder;
+ (PEXPbKeySlotBuilder*) builder;
+ (PEXPbKeySlotBuilder*) builderWithPrototype:(PEXPbKeySlot*) prototype;
- (PEXPbKeySlotBuilder*) toBuilder;

+ (PEXPbKeySlot*) parseFromData:(NSData*) data;
+ (PEXPbKeySlot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbKeySlot*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbKeySlot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbKeySlot*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbKeySlot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbKeySlotBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbKeySlot* result;
}

- (PEXPbKeySlot*) defaultInstance;

- (PEXPbKeySlotBuilder*) clear;
- (PEXPbKeySlotBuilder*) clone;

- (PEXPbKeySlot*) build;
- (PEXPbKeySlot*) buildPartial;

- (PEXPbKeySlotBuilder*) mergeFrom:(PEXPbKeySlot*) other;
- (PEXPbKeySlotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbKeySlotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEncType;
- (PEXPbKeySlotPEXPbKeySlotEncryption) encType;
- (PEXPbKeySlotBuilder*) setEncType:(PEXPbKeySlotPEXPbKeySlotEncryption) value;
- (PEXPbKeySlotBuilder*) clearEncType;

- (BOOL) hasIv;
- (NSData*) iv;
- (PEXPbKeySlotBuilder*) setIv:(NSData*) value;
- (PEXPbKeySlotBuilder*) clearIv;

- (BOOL) hasEncKey;
- (NSData*) encKey;
- (PEXPbKeySlotBuilder*) setEncKey:(NSData*) value;
- (PEXPbKeySlotBuilder*) clearEncKey;

- (BOOL) hasMac;
- (NSData*) mac;
- (PEXPbKeySlotBuilder*) setMac:(NSData*) value;
- (PEXPbKeySlotBuilder*) clearMac;
@end

@interface PEXPbEncryptedMessage : PBGeneratedMessage {
@private
  BOOL hasACiphertext_:1;
  BOOL hasSIv_:1;
  BOOL hasSCiphertext_:1;
  BOOL hasVersion_:1;
  NSData* aCiphertext;
  NSData* sIv;
  NSData* sCiphertext;
  UInt32 version;
  NSMutableArray * keysArray;
  NSMutableArray * keySlotsArray;
}
- (BOOL) hasVersion;
- (BOOL) hasACiphertext;
- (BOOL) hasSIv;
- (BOOL) hasSCiphertext;
@property (readonly) UInt32 version;
@property (readonly, strong) NSArray * keys;
@property (readonly, strong) NSArray * keySlots;
@property (readonly, strong) NSData* aCiphertext;
@property (readonly, strong) NSData* sIv;
@property (readonly, strong) NSData* sCiphertext;
- (PEXPbMsgKeyPart*)keysAtIndex:(NSUInteger)index;
- (PEXPbKeySlot*)keySlotsAtIndex:(NSUInteger)index;

+ (PEXPbEncryptedMessage*) defaultInstance;
- (PEXPbEncryptedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PEXPbEncryptedMessageBuilder*) builder;
+ (PEXPbEncryptedMessageBuilder*) builder;
+ (PEXPbEncryptedMessageBuilder*) builderWithPrototype:(PEXPbEncryptedMessage*) prototype;
- (PEXPbEncryptedMessageBuilder*) toBuilder;

+ (PEXPbEncryptedMessage*) parseFromData:(NSData*) data;
+ (PEXPbEncryptedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbEncryptedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (PEXPbEncryptedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PEXPbEncryptedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PEXPbEncryptedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PEXPbEncryptedMessageBuilder : PBGeneratedMessageBuilder {
@private
  PEXPbEncryptedMessage* result;
}

- (PEXPbEncryptedMessage*) defaultInstance;

- (PEXPbEncryptedMessageBuilder*) clear;
- (PEXPbEncryptedMessageBuilder*) clone;

- (PEXPbEncryptedMessage*) build;
- (PEXPbEncryptedMessage*) buildPartial;

- (PEXPbEncryptedMessageBuilder*) mergeFrom:(PEXPbEncryptedMessage*) other;
- (PEXPbEncryptedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PEXPbEncryptedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (UInt32) version;
- (PEXPbEncryptedMessageBuilder*) setVersion:(UInt32) value;
- (PEXPbEncryptedMessageBuilder*) clearVersion;

- (NSMutableArray *)keys;
- (PEXPbMsgKeyPart*)keysAtIndex:(NSUInteger)index;
- (PEXPbEncryptedMessageBuilder *)addKeys:(PEXPbMsgKeyPart*)value;
- (PEXPbEncryptedMessageBuilder *)setKeysArray:(NSArray *)array;
- (PEXPbEncryptedMessageBuilder *)clearKeys;

- (NSMutableArray *)keySlots;
- (PEXPbKeySlot*)keySlotsAtIndex:(NSUInteger)index;
- (PEXPbEncryptedMessageBuilder *)addKeySlots:(PEXPbKeySlot*)value;
- (PEXPbEncryptedMessageBuilder *)setKeySlotsArray:(NSArray *)array;
- (PEXPbEncryptedMessageBuilder *)clearKeySlots;

- (BOOL) hasACiphertext;
- (NSData*) aCiphertext;
- (PEXPbEncryptedMessageBuilder*) setACiphertext:(NSData*) value;
- (PEXPbEncryptedMessageBuilder*) clearACiphertext;

- (BOOL) hasSIv;
- (NSData*) sIv;
- (PEXPbEncryptedMessageBuilder*) setSIv:(NSData*) value;
- (PEXPbEncryptedMessageBuilder*) clearSIv;

- (BOOL) hasSCiphertext;
- (NSData*) sCiphertext;
- (PEXPbEncryptedMessageBuilder*) setSCiphertext:(NSData*) value;
- (PEXPbEncryptedMessageBuilder*) clearSCiphertext;
@end


// @@protoc_insertion_point(global_scope)
